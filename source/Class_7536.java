/*
 * Decompiled with CFR 0.145.
 */
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;

public class Class_7536 {
    private Class_18574 Field_7537 = Class_18574.Field_18577;
    private Class_7536 Field_7538 = null;
    private Class_22472 Field_7539 = Class_22472.Field_22476;
    private float Field_7540 = 3.4865901f * 0.63736266f;
    private static final Class_29467[] Field_7541;
    private float Field_7542 = 2.0f;
    private static final Class_15710[] Field_7543;
    private int Field_7544 = 19 & 8491;
    private static final Class_29467[] Field_7545;
    private Class_20374 Field_7546 = Class_20374.Field_20376;
    private float Field_7547;
    private int Field_7548 = 17915 & 5945;
    private static final byte[] Field_7549;
    private static final Class_15710[] Field_7550;
    private Class_8038 Field_7551 = Class_8038.Field_8041;
    private float Field_7552 = 0.020204082f * 0.4949495f;
    private float Field_7553 = 1.2916667f * 0.38709676f;
    private Class_28735 Field_7554 = Class_28735.Field_28739;

    private float Method_7555(float f, float f2) {
        int n = this.Field_7548;
        float f3 = 1.0f - Math.abs(this.Method_7584(n, f, f2));
        float f4 = 1.0f;
        for (int i = 353 & 8323; i < this.Field_7544; ++i) {
            f3 -= (1.0f - Math.abs(this.Method_7584(++n, f *= this.Field_7542, f2 *= this.Field_7542))) * (f4 *= this.Field_7553);
        }
        return f3;
    }

    private float Method_7556(float f, float f2) {
        int n = this.Field_7548;
        float f3 = this.Method_7584(n, f, f2);
        float f4 = 1.0f;
        for (int i = 28681 & -31743; i < this.Field_7544; ++i) {
            f3 += this.Method_7584(++n, f *= this.Field_7542, f2 *= this.Field_7542) * (f4 *= this.Field_7553);
        }
        return f3 * this.Field_7547;
    }

    static {
        Class_29467[] arrclass_29467 = new Class_29467[-19640 & 18442];
        arrclass_29467[2052 & 1024] = new Class_29467(-1.0519481f * 0.9506173f, 0.47435898f * -2.108108f);
        arrclass_29467[-17407 & 273] = new Class_29467(1.0f, 0.52f * -1.923077f);
        arrclass_29467[34 & -24374] = new Class_29467(-9.285714f * 0.10769231f, 1.0f);
        arrclass_29467[1795 & 195] = new Class_29467(1.0f, 1.0f);
        arrclass_29467[18695 & -24428] = new Class_29467(0.0f, -0.75757575f * 1.32f);
        arrclass_29467[1237 & 2053] = new Class_29467(0.7090909f * -1.4102565f, 0.0f);
        arrclass_29467[1863 & 6] = new Class_29467(0.0f, 1.0f);
        arrclass_29467[-12153 & 1031] = new Class_29467(1.0f, 0.0f);
        Field_7545 = arrclass_29467;
        Class_15710[] arrclass_15710 = new Class_15710[-16080 & 7248];
        arrclass_15710[2144 & 16514] = new Class_15710(1.0f, 1.0f, 0.0f);
        arrclass_15710[-7675 & 2179] = new Class_15710(-1.2295082f * 0.81333333f, 1.0f, 0.0f);
        arrclass_15710[2 & 24598] = new Class_15710(1.0f, 3.1538463f * -0.31707317f, 0.0f);
        arrclass_15710[7 & 17939] = new Class_15710(1.1515151f * -0.8684211f, 0.5050505f * -1.9800001f, 0.0f);
        arrclass_15710[-32699 & 25660] = new Class_15710(1.0f, 0.0f, 1.0f);
        arrclass_15710[4389 & 27229] = new Class_15710(-1.0769231f * 0.9285714f, 0.0f, 1.0f);
        arrclass_15710[5582 & 39] = new Class_15710(1.0f, 0.0f, -0.969697f * 1.03125f);
        arrclass_15710[5775 & 2391] = new Class_15710(3.074074f * -0.3253012f, 0.0f, -0.988372f * 1.0117648f);
        arrclass_15710[8270 & 6440] = new Class_15710(0.0f, 1.0f, 1.0f);
        arrclass_15710[281 & -9589] = new Class_15710(0.0f, -0.26190478f * 3.8181818f, 1.0f);
        arrclass_15710[-30513 & 25386] = new Class_15710(0.0f, 1.0f, -1.2807018f * 0.7808219f);
        arrclass_15710[427 & -32741] = new Class_15710(0.0f, -1.8409091f * 0.54320985f, 0.175f * -5.714286f);
        arrclass_15710[4108 & -32706] = new Class_15710(1.0f, 1.0f, 0.0f);
        arrclass_15710[12429 & -31633] = new Class_15710(0.0f, 4.714286f * -0.2121212f, 1.0f);
        arrclass_15710[14 & 16654] = new Class_15710(1.3384615f * -0.74712646f, 1.0f, 0.0f);
        arrclass_15710[351 & 175] = new Class_15710(0.0f, 2.0f * -0.5f, -0.4117647f * 2.4285715f);
        Field_7543 = arrclass_15710;
        Class_29467[] arrclass_294672 = new Class_29467[4352 & -32473];
        arrclass_294672[12849 & -14208] = new Class_29467(0.12962963f * -3.3275876f, 11.281102f * 0.011363637f);
        arrclass_294672[12613 & -31221] = new Class_29467(-0.114740685f * 1.5106384f, 1.3381193f * 0.31034482f);
        arrclass_294672[75 & 2] = new Class_29467(-0.5016813f * 0.5625f, 6.3846154f * -0.05490101f);
        arrclass_294672[-32601 & 3139] = new Class_29467(-0.07972936f * 3.52f, 2.1985173f * 0.16f);
        arrclass_294672[20500 & -29020] = new Class_29467(15.25f * 0.02049514f, 23.666666f * -0.013679439f);
        arrclass_294672[2055 & -19691] = new Class_29467(1.1111112f * 0.30447164f, 3.1764705f * -0.09341668f);
        arrclass_294672[17566 & 6662] = new Class_29467(0.87142855f * -0.50422746f, -0.37308446f * 0.26027396f);
        arrclass_294672[16455 & -32761] = new Class_29467(-0.025634734f * 17.4f, -0.0982328f * 0.6060606f);
        arrclass_294672[-8120 & 28] = new Class_29467(0.73255813f * -0.41255844f, 0.7297297f * 0.45689315f);
        arrclass_294672[6153 & 16491] = new Class_29467(1.1590909f * -0.18348955f, 1.0232558f * -0.3875558f);
        arrclass_294672[522 & 5242] = new Class_29467(-0.25534263f * 1.1714286f, 0.6051583f * 0.5555556f);
        arrclass_294672[779 & -15285] = new Class_29467(0.17199928f * 1.3333334f, 0.8888889f * 0.43557504f);
        arrclass_294672[8495 & 22028] = new Class_29467(0.11675059f * 3.8333333f, 0.5869565f * -0.07999146f);
        arrclass_294672[6989 & 24591] = new Class_29467(0.17105263f * 1.0391643f, 0.16f * 2.5837858f);
        arrclass_294672[18447 & 4238] = new Class_29467(1.2380953f * 0.13638066f, -0.40137944f * 1.0392157f);
        arrclass_294672[10351 & -28401] = new Class_29467(1.65f * -0.059187707f, 0.8888889f * 0.49418443f);
        arrclass_294672[26930 & 4116] = new Class_29467(1.8636364f * 0.045342475f, 0.08839897f * 5.0f);
        arrclass_294672[18451 & 9041] = new Class_29467(0.3655914f * -1.1211315f, 15.0f * -0.012383075f);
        arrclass_294672[6170 & 178] = new Class_29467(0.7374576f * 0.47142857f, 18.75f * -0.015238175f);
        arrclass_294672[-30697 & 5787] = new Class_29467(-0.76820236f * 0.43617022f, 2.5555556f * -0.117541276f);
        arrclass_294672[18869 & 4118] = new Class_29467(0.9516129f * 0.24150471f, 2.6764705f * -0.14455199f);
        arrclass_294672[20565 & 1053] = new Class_29467(2.7941177f * -0.0038292021f, 0.9677419f * 0.46486858f);
        arrclass_294672[1622 & 182] = new Class_29467(0.39215687f * -1.137336f, 2.5384614f * -0.02354229f);
        arrclass_294672[-32425 & 3615] = new Class_29467(0.6779117f * 0.53846157f, 0.29107165f * 0.9041096f);
        arrclass_294672[4120 & -29636] = new Class_29467(2.548387f * -0.1371375f, 4.3636365f * 0.064965464f);
        arrclass_294672[23257 & -32709] = new Class_29467(-0.7405628f * 0.556701f, 0.9920107f * 0.18181819f);
        arrclass_294672[20506 & -29442] = new Class_29467(-0.2882128f * 0.92753625f, 0.17721519f * 2.0426507f);
        arrclass_294672[23579 & -32229] = new Class_29467(0.5405132f * 0.5959596f, 0.91803277f * -0.34227866f);
        arrclass_294672[-26563 & 158] = new Class_29467(0.7592593f * 0.37937582f, 2.7333333f * -0.12648715f);
        arrclass_294672[4125 & 3101] = new Class_29467(1.2531645f * 0.31058738f, 0.2247191f * -1.0050505f);
        arrclass_294672[10527 & 30] = new Class_29467(1.060606f * 0.42353946f, 0.26966292f * -0.09893134f);
        arrclass_294672[-20449 & 20383] = new Class_29467(-0.9770919f * 0.46031746f, 0.29032257f * 0.0492831f);
        arrclass_294672[1068 & 25377] = new Class_29467(0.07456023f * 1.7142857f, -0.18876626f * 2.2857144f);
        arrclass_294672[33 & 3113] = new Class_29467(-0.055700548f * 0.6413044f, 0.2876763f * 1.559322f);
        arrclass_294672[16498 & 2722] = new Class_29467(2.7058823f * -0.15881722f, 0.68333334f * -0.19536956f);
        arrclass_294672[8227 & 4275] = new Class_29467(6.0f * -0.053630296f, 0.81578946f * 0.38560623f);
        arrclass_294672[3124 & 868] = new Class_29467(-0.293322f * 1.0422535f, 5.0f * 0.066041745f);
        arrclass_294672[20581 & 47] = new Class_29467(14.666667f * -0.028261635f, 0.2657835f * 0.65909094f);
        arrclass_294672[18599 & 10038] = new Class_29467(-2.0559769f * 0.18181819f, 1.7328025f * 0.14457831f);
        arrclass_294672[8823 & 39] = new Class_29467(0.1991079f * 1.1234568f, 1.8235294f * -0.21412615f);
        arrclass_294672[1850 & -26392] = new Class_29467(4.5f * 6.5950566E-4f, -0.30624333f * 1.4693878f);
        arrclass_294672[18025 & 169] = new Class_29467(0.16949753f * 1.0307692f, 0.45714286f * -0.9071545f);
        arrclass_294672[63 & 10410] = new Class_29467(2.7714286f * -0.15962066f, 6.714286f * -0.012283731f);
        arrclass_294672[20779 & 8427] = new Class_29467(-0.004318689f * 64.0f, -0.30438253f * 1.1666666f);
        arrclass_294672[2351 & -20436] = new Class_29467(3.3214285f * -0.12101377f, -0.24281955f * 0.8333333f);
        arrclass_294672[1341 & -32529] = new Class_29467(9.678535f * 0.04f, -0.09831164f * 2.3333333f);
        arrclass_294672[2174 & 9391] = new Class_29467(2.347826f * -0.18315187f, 1.0425532f * 0.12722296f);
        arrclass_294672[9391 & -12241] = new Class_29467(1.1038961f * -0.02751685f, -0.23280114f * 1.9285715f);
        arrclass_294672[19504 & -32460] = new Class_29467(-0.4695673f * 0.74242425f, 0.7457627f * 0.38154787f);
        arrclass_294672[8251 & 2101] = new Class_29467(0.040981654f * 1.1111112f, -1.7627803f * 0.25396827f);
        arrclass_294672[12407 & -28750] = new Class_29467(-0.025986372f * 1.4461539f, 0.3308076f * 1.3555555f);
        arrclass_294672[9907 & 127] = new Class_29467(0.6111111f * 0.5345033f, 0.8181818f * 0.37830836f);
        arrclass_294672[13620 & 62] = new Class_29467(0.1460097f * 0.44791666f, -0.4452222f * 1.0f);
        arrclass_294672[20661 & 2423] = new Class_29467(0.13114753f * 0.25993824f, 0.11918776f * 3.764706f);
        arrclass_294672[4406 & 17142] = new Class_29467(-0.005778174f * 77.0f, 0.06378482f * 1.0571429f);
        arrclass_294672[1279 & 8247] = new Class_29467(-0.4255936f * 1.0f, 0.85f * -0.17198244f);
        arrclass_294672[2236 & 9784] = new Class_29467(1.0425532f * 0.4315533f, 0.008627303f * 1.0f);
        arrclass_294672[61 & -14087] = new Class_29467(0.086419754f * 0.60664445f, 0.40407884f * 1.1060606f);
        arrclass_294672[10298 & 127] = new Class_29467(-0.17981221f * 2.5f, -0.28770372f * 0.071428575f);
        arrclass_294672[59 & -7681] = new Class_29467(1.72f * -0.0700451f, 0.23276001f * 1.862745f);
        arrclass_294672[16444 & 2685] = new Class_29467(-0.46548146f * 0.7346939f, 0.8787879f * -0.33282354f);
        arrclass_294672[12349 & 639] = new Class_29467(0.7844326f * 0.49275362f, 2.925926f * 0.078750856f);
        arrclass_294672[8639 & -30658] = new Class_29467(0.017836638f * 2.5263157f, 1.0465117f * -0.4278387f);
        arrclass_294672[191 & 16959] = new Class_29467(-0.19059846f * 0.32967034f, 1.0632912f * 0.4190682f);
        arrclass_294672[8652 & 82] = new Class_29467(7.5702558f * 0.051948052f, 0.98888886f * -0.22119626f);
        arrclass_294672[5697 & 2161] = new Class_29467(0.048494402f * 9.222222f, 0.5217391f * -0.09561735f);
        arrclass_294672[3394 & -15785] = new Class_29467(2.6571429f * 0.14126343f, 0.185567f * -1.3375636f);
        arrclass_294672[-31033 & 12635] = new Class_29467(1.745098f * -0.15681772f, 1.0002271f * 0.35714287f);
        arrclass_294672[85 & -15676] = new Class_29467(0.47058824f * 0.36134806f, 0.71666664f * 0.5813505f);
        arrclass_294672[1223 & -32699] = new Class_29467(3.5f * 0.11721978f, 0.5102041f * 0.36235714f);
        arrclass_294672[26982 & 1606] = new Class_29467(0.24139753f * 1.338983f, -0.056458518f * 5.5454545f);
        arrclass_294672[-31801 & 10343] = new Class_29467(1.0f * -0.28823102f, -0.5183642f * 0.6666667f);
        arrclass_294672[4168 & 2633] = new Class_29467(0.087010965f * 2.357143f, 0.5777778f * 0.69324833f);
        arrclass_294672[457 & -2999] = new Class_29467(0.25925925f * 1.702576f, 0.043956045f * -1.9909109f);
        arrclass_294672[25163 & -32678] = new Class_29467(3.1176472f * -0.05403756f, 0.65f * 0.6419605f);
        arrclass_294672[587 & 25931] = new Class_29467(-0.0021060174f * 1.8888888f, 0.87296593f * 0.5154639f);
        arrclass_294672[26700 & 1406] = new Class_29467(26.0f * -0.00790436f, 0.275783f * 1.451613f);
        arrclass_294672[-30643 & 8653] = new Class_29467(2.25f * -0.0027091887f, -1.3972402f * 0.3220339f);
        arrclass_294672[27262 & 5582] = new Class_29467(-0.13158509f * 0.90909094f, -0.6610425f * 0.65625f);
        arrclass_294672[24671 & -29105] = new Class_29467(0.2065515f * 1.8888888f, -0.1370317f * 1.6363636f);
        arrclass_294672[6228 & 594] = new Class_29467(0.080873415f * 0.21311475f, 0.8797887f * 0.51111114f);
        arrclass_294672[12881 & 1265] = new Class_29467(-0.7753038f * 0.3888889f, 0.10184638f * 3.28f);
        arrclass_294672[17498 & -32558] = new Class_29467(-0.04668976f * 0.3243243f, 0.1882353f * -2.389271f);
        arrclass_294672[11347 & 4443] = new Class_29467(0.11111111f * -3.7283165f, 0.6060606f * -0.29000035f);
        arrclass_294672[8532 & -28579] = new Class_29467(1.0833334f * -0.17689635f, 15.0f * -0.02714365f);
        arrclass_294672[469 & 14453] = new Class_29467(2.3055556f * 0.16261801f, 0.15689005f * 1.5862069f);
        arrclass_294672[-20778 & 16503] = new Class_29467(-0.007716463f * 29.0f, 0.6753247f * 0.57811415f);
        arrclass_294672[1239 & -30601] = new Class_29467(0.07608695f * -5.4757657f, -0.07513688f * 2.2631578f);
        arrclass_294672[-28551 & 20314] = new Class_29467(1.2063905f * 0.3f, 0.21393976f * 1.25f);
        arrclass_294672[-16165 & 15193] = new Class_29467(0.105551265f * 1.7916666f, -0.37430587f * 1.0909091f);
        arrclass_294672[-26022 & 9306] = new Class_29467(-0.054390002f * 5.75f, 0.7619048f * 0.4246746f);
        arrclass_294672[6107 & -32673] = new Class_29467(-1.090029f * 0.30107528f, 0.14285715f * 2.1552427f);
        arrclass_294672[8799 & 3420] = new Class_29467(-7.0374074f * 0.032608695f, 0.15725528f * 2.4615386f);
        arrclass_294672[1629 & -1665] = new Class_29467(1.58f * -0.21805482f, 0.8173687f * 0.35416666f);
        arrclass_294672[25214 & -27553] = new Class_29467(-0.8056385f * 0.51724136f, -0.04014924f * 4.230769f);
        arrclass_294672[4447 & 25823] = new Class_29467(0.5f * -0.5157806f, 8.636364f * -0.042699885f);
        arrclass_294672[225 & -27552] = new Class_29467(1.8148148f * -0.19903067f, 0.31108546f * 0.8627451f);
        arrclass_294672[-32405 & 17125] = new Class_29467(0.011235955f * 20.18517f, 0.38866684f * 1.0f);
        arrclass_294672[114 & 14826] = new Class_29467(1.9032258f * 0.108845234f, 1.076087f * 0.37123588f);
        arrclass_294672[29155 & 3171] = new Class_29467(0.076440975f * 1.0930233f, -0.44217542f * 1.0f);
        arrclass_294672[5228 & 100] = new Class_29467(-0.47742584f * 0.9032258f, 2.2083333f * 0.058248892f);
        arrclass_294672[109 & 10743] = new Class_29467(0.80408555f * 0.4050633f, 0.4609119f * 0.67368424f);
        arrclass_294672[10110 & 230] = new Class_29467(0.5f * 0.3554022f, 32.0f * -0.01291961f);
        arrclass_294672[-23953 & 19815] = new Class_29467(-0.049464725f * 9.0f, 0.031043904f * 2.1153846f);
        arrclass_294672[6892 & 1400] = new Class_29467(0.06379264f * 6.2f, 0.069767445f * 3.0764422f);
        arrclass_294672[16505 & 3689] = new Class_29467(1.3023256f * -0.32746142f, 0.043790802f * 3.28f);
        arrclass_294672[10347 & -26646] = new Class_29467(2.1666667f * -0.17509843f, 0.15662651f * -1.5451672f);
        arrclass_294672[1259 & 12395] = new Class_29467(0.055824704f * 0.8271605f, 1.1f * -0.40693143f);
        arrclass_294672[-32643 & 6254] = new Class_29467(-0.63357395f * 0.5862069f, -0.034874093f * 7.285714f);
        arrclass_294672[-21651 & 5359] = new Class_29467(4.5454545f * 0.056398552f, -9.61582f * 0.03846154f);
        arrclass_294672[2686 & 16750] = new Class_29467(5.3333335f * 0.0065187113f, 0.49944612f * 0.89830506f);
        arrclass_294672[4207 & 751] = new Class_29467(-0.08313096f * 3.6875f, 0.50980395f * 0.64620674f);
        arrclass_294672[16626 & 9328] = new Class_29467(-0.011515203f * 19.6f, 0.54347825f * 0.71632606f);
        arrclass_294672[12665 & -29579] = new Class_29467(0.47453502f * 0.8674699f, 3.1851852f * -0.057074398f);
        arrclass_294672[627 & 6266] = new Class_29467(-3.053133f * 0.0952381f, 1.875f * -0.18316731f);
        arrclass_294672[8447 & 2163] = new Class_29467(0.703125f * 0.40423515f, -0.17956857f * 1.9428571f);
        arrclass_294672[5236 & -15363] = new Class_29467(0.26799956f * 1.1621622f, 1.0568181f * -0.30733517f);
        arrclass_294672[253 & 3447] = new Class_29467(2.0434783f * 0.21845868f, -5.7257E-4f * 99.0f);
        arrclass_294672[9334 & 17015] = new Class_29467(14.0f * -0.021695243f, 0.12857144f * -2.58248f);
        arrclass_294672[-30721 & 16503] = new Class_29467(0.5714286f * 0.7139312f, 0.73015875f * 0.2601022f);
        arrclass_294672[250 & 19576] = new Class_29467(1.6585366f * -0.21024251f, 1.9166666f * -0.14840876f);
        arrclass_294672[2301 & 13945] = new Class_29467(2.0521736f * 0.1590909f, 0.5f * 0.6193849f);
        arrclass_294672[12538 & 2939] = new Class_29467(0.6f * 0.5351904f, 1.6393254f * 0.1923077f);
        arrclass_294672[14203 & 16639] = new Class_29467(0.041418392f * 0.2857143f, 0.4089494f * 1.1f);
        arrclass_294672[-24452 & 381] = new Class_29467(0.380853f * 1.137931f, 0.08793334f * 1.3777778f);
        arrclass_294672[-20225 & 2685] = new Class_29467(0.1759249f * 1.7727273f, 0.039321907f * 8.25f);
        arrclass_294672[16766 & 4222] = new Class_29467(-0.028411819f * 9.6f, 0.6785535f * 0.52747256f);
        arrclass_294672[18815 & 255] = new Class_29467(-0.17351861f * 2.4333334f, -0.3180416f * 0.4893617f);
        arrclass_294672[2432 & 8839] = new Class_29467(0.59782606f * -0.16889529f, -2.7564492f * 0.1590909f);
        arrclass_294672[1185 & -16183] = new Class_29467(-0.6304694f * 0.4347826f, -1.4275002f * 0.25f);
        arrclass_294672[422 & 138] = new Class_29467(0.16216215f * -0.9034938f, 0.125f * 3.403848f);
        arrclass_294672[4271 & 8387] = new Class_29467(0.13689227f * 1.6818181f, -0.6498943f * 0.5949367f);
        arrclass_294672[-32572 & 901] = new Class_29467(7.4444447f * -0.04969391f, 0.4047619f * 0.6329807f);
        arrclass_294672[16525 & 12965] = new Class_29467(4.875f * 0.021682123f, -0.43294656f * 1.0103092f);
        arrclass_294672[4310 & -22905] = new Class_29467(-0.015124078f * 17.5f, 0.48903838f * 0.74418604f);
        arrclass_294672[143 & -9833] = new Class_29467(1.804937f * 0.19512194f, 1.3666667f * 0.20496593f);
        arrclass_294672[251 & 10636] = new Class_29467(-0.1322972f * 1.4090909f, 3.3636363f * -0.12176422f);
        arrclass_294672[8845 & 425] = new Class_29467(0.12f * 1.6620775f, 0.6105263f * -0.66071784f);
        arrclass_294672[12938 & 1162] = new Class_29467(0.77731794f * 0.5064935f, 0.031133415f * 7.0f);
        arrclass_294672[-20021 & 171] = new Class_29467(-0.35313356f * 0.91358024f, 0.0728274f * 4.3076925f);
        arrclass_294672[-23636 & 204] = new Class_29467(4.7647057f * 0.07967408f, 0.5686275f * 0.42493883f);
        arrclass_294672[16877 & 4253] = new Class_29467(2.4f * 0.061788414f, 7.3643093f * 0.057692308f);
        arrclass_294672[3279 & 20654] = new Class_29467(-0.9073918f * 0.4489796f, 0.12820514f * 1.4906964f);
        arrclass_294672[22671 & 2031] = new Class_29467(1.2682927f * 0.33216727f, 0.19863583f * 0.7962963f);
        arrclass_294672[19120 & 148] = new Class_29467(-0.022214383f * 11.8f, 1.0714285f * 0.34138575f);
        arrclass_294672[25009 & 723] = new Class_29467(0.8611111f * -0.29461786f, 0.25f * -1.4866713f);
        arrclass_294672[-31054 & 14802] = new Class_29467(5.25f * -0.040004503f, 2.4964356f * 0.1594203f);
        arrclass_294672[147 & 3227] = new Class_29467(1.1309524f * 0.32045138f, 0.09699974f * 2.75f);
        arrclass_294672[1686 & 8340] = new Class_29467(-0.3948792f * 0.9230769f, 0.8113208f * -0.32525745f);
        arrclass_294672[663 & -24427] = new Class_29467(0.34593296f * 0.67021275f, 0.12361419f * 3.12f);
        arrclass_294672[8695 & -27498] = new Class_29467(4.8235292f * -0.06759484f, 0.8304067f * 0.37349397f);
        arrclass_294672[-16225 & 151] = new Class_29467(2.1142857f * -0.10074539f, -0.33473364f * 1.1842105f);
        arrclass_294672[8440 & -15976] = new Class_29467(16.022995f * 0.023809524f, -1.4916152f * 0.16f);
        arrclass_294672[21913 & 10397] = new Class_29467(0.5375f * -0.6380973f, 0.024276556f * 12.0f);
        arrclass_294672[-32613 & 2522] = new Class_29467(3.064516f * -0.14213878f, 0.18754582f * 0.60240966f);
        arrclass_294672[20639 & 411] = new Class_29467(0.875f * -0.24053481f, 0.453125f * 0.877788f);
        arrclass_294672[8863 & 220] = new Class_29467(5.2222223f * 0.06411762f, -0.08199279f * 3.6666667f);
        arrclass_294672[-25443 & 767] = new Class_29467(0.07446808f * 4.6066294f, 0.4556962f * 0.6391028f);
        arrclass_294672[17054 & 4255] = new Class_29467(-0.347248f * 0.66f, -0.11265916f * 3.4375f);
        arrclass_294672[5023 & 25759] = new Class_29467(0.8964155f * 0.28421053f, 0.60784316f * -0.6102459f);
        arrclass_294672[17313 & 11424] = new Class_29467(0.0204153f * 20.75f, 0.20512821f * -0.7401049f);
        arrclass_294672[16609 & 12467] = new Class_29467(0.64646465f * -0.23802914f, 6.2f * 0.06820536f);
        arrclass_294672[170 & 14822] = new Class_29467(0.30588236f * -1.4408969f, 0.34223092f * 0.26530612f);
        arrclass_294672[1215 & 675] = new Class_29467(0.7f * -0.09721823f, 6.928571f * -0.064201474f);
        arrclass_294672[5862 & -32588] = new Class_29467(0.098967046f * 4.5f, 0.6979167f * -0.092435636f);
        arrclass_294672[485 & 687] = new Class_29467(1.2105263f * 0.21168184f, 5.470588f * -0.06761903f);
        arrclass_294672[678 & -19217] = new Class_29467(0.8523315f * 0.3846154f, -0.026806619f * 11.5f);
        arrclass_294672[-28481 & 487] = new Class_29467(-1.2810048f * 0.3218391f, 1.4444444f * -0.12486001f);
        arrclass_294672[169 & 21672] = new Class_29467(7.043591f * 0.04761905f, -0.25483975f * 1.1772152f);
        arrclass_294672[12713 & 3307] = new Class_29467(0.28f * 1.5951173f, 0.07462686f * -0.73627853f);
        arrclass_294672[9642 & 4778] = new Class_29467(23.0f * -0.0069954493f, 2.15f * 0.19546656f);
        arrclass_294672[-24405 & 17903] = new Class_29467(-0.037357718f * 2.5333333f, 0.36264965f * 1.2131147f);
        arrclass_294672[252 & -19796] = new Class_29467(1.1076924f * -0.023812462f, -0.015490562f * 29.0f);
        arrclass_294672[237 & 20653] = new Class_29467(0.04347826f * 10.283364f, -0.03641514f * 1.4f);
        arrclass_294672[28094 & 750] = new Class_29467(-0.11641789f * 3.75f, 8.777778f * 0.012432437f);
        arrclass_294672[9407 & 4527] = new Class_29467(0.11111111f * -3.5638728f, 0.10688217f * 2.0f);
        arrclass_294672[4786 & 24765] = new Class_29467(-0.51073307f * 0.8301887f, -0.039753295f * 3.7916667f);
        arrclass_294672[-32587 & 3313] = new Class_29467(-0.54359126f * 0.71428573f, 97.0f * 0.0023449713f);
        arrclass_294672[14514 & -31814] = new Class_29467(0.43434343f * -0.98623633f, -0.050326962f * 2.7391305f);
        arrclass_294672[-15885 & 5303] = new Class_29467(2.4615386f * 0.13422045f, 0.09884511f * 3.090909f);
        arrclass_294672[9662 & -16139] = new Class_29467(0.1590909f * 2.087759f, -0.24617249f * 1.2333333f);
        arrclass_294672[-17995 & 1205] = new Class_29467(1.5142857f * -0.27274975f, 0.52040815f * -0.34327638f);
        arrclass_294672[-23626 & 4278] = new Class_29467(4.3333335f * 0.019391678f, 1.0f * -0.44208467f);
        arrclass_294672[183 & 5303] = new Class_29467(12.571428f * -0.030409295f, 2.2382812f * 0.10606061f);
        arrclass_294672[18620 & 248] = new Class_29467(-0.2699924f * 1.375f, -0.09463255f * 2.6875f);
        arrclass_294672[22969 & -31045] = new Class_29467(0.118644066f * 3.769564f, -0.011411499f * 4.3636365f);
        arrclass_294672[4282 & -31554] = new Class_29467(1.9333333f * -0.23103058f, 0.025984041f * 2.106383f);
        arrclass_294672[18619 & 5051] = new Class_29467(0.025073428f * 1.939394f, 0.5185185f * -0.8627752f);
        arrclass_294672[-26372 & 8636] = new Class_29467(3.9047618f * -0.10764041f, -0.068195425f * 2.357143f);
        arrclass_294672[189 & -30273] = new Class_29467(17.2f * 0.012821864f, 0.15118155f * 2.5945945f);
        arrclass_294672[1214 & 958] = new Class_29467(0.9285714f * -0.39037392f, 0.19914189f * 1.338983f);
        arrclass_294672[255 & 1215] = new Class_29467(-0.9172925f * 0.44f, -0.28093776f * 0.7083333f);
        arrclass_294672[8416 & 968] = new Class_29467(0.8666667f * 0.24839167f, 0.1904762f * 2.0746312f);
        arrclass_294672[19143 & -31551] = new Class_29467(-0.32121843f * 1.3571428f, -0.061578274f * 1.8125f);
        arrclass_294672[18123 & 10482] = new Class_29467(0.13751546f * 3.0384614f, 0.2544658f * 0.65656567f);
        arrclass_294672[3035 & 227] = new Class_29467(3.5652175f * 0.056311578f, 0.12820514f * 3.1413205f);
        arrclass_294672[29140 & -32028] = new Class_29467(-0.08618763f * 0.84444445f, -0.055509426f * 8.0f);
        arrclass_294672[16613 & 727] = new Class_29467(2.139535f * 0.17035237f, 0.16666667f * -1.583569f);
        arrclass_294672[8678 & 214] = new Class_29467(0.9574468f * -0.45093384f, 0.014752372f * 8.6f);
        arrclass_294672[-23865 & 17615] = new Class_29467(-2.3051326f * 0.12903225f, 8.3f * 0.04068501f);
        arrclass_294672[457 & -20278] = new Class_29467(-0.25188845f * 1.1904762f, 0.3355289f * 1.0f);
        arrclass_294672[-21793 & 233] = new Class_29467(-0.0034723042f * 77.0f, 0.2910602f * 1.2435898f);
        arrclass_294672[8650 & -10518] = new Class_29467(0.8255814f * 0.34017524f, 1.6578947f * 0.2120805f);
        arrclass_294672[-28449 & 3275] = new Class_29467(0.11111111f * 3.1490517f, 3.05f * 0.09277804f);
        arrclass_294672[493 & -15156] = new Class_29467(1.4558823f * -0.15315013f, 2.2916667f * 0.1705646f);
        arrclass_294672[733 & -24339] = new Class_29467(1.3606558f * 0.24295808f, 0.8214286f * 0.37168398f);
        arrclass_294672[27102 & 750] = new Class_29467(-0.4967081f * 0.49056605f, -0.12774433f * 2.9615386f);
        arrclass_294672[255 & 6351] = new Class_29467(-0.12930551f * 0.2631579f, 0.9368421f * 0.47896183f);
        arrclass_294672[9974 & 4305] = new Class_29467(0.70238096f * -0.45468035f, 5.5f * 0.057642367f);
        arrclass_294672[29905 & -32013] = new Class_29467(0.03529412f * 12.621461f, -0.00929498f * 6.857143f);
        arrclass_294672[246 & 19674] = new Class_29467(0.23076923f * 1.9428519f, 0.00481193f * 8.0f);
        arrclass_294672[-12069 & 755] = new Class_29467(-0.46450976f * 0.953125f, -0.101780124f * 0.7912088f);
        arrclass_294672[9692 & 20692] = new Class_29467(0.3253012f * 0.16760771f, 23.227604f * 0.01923077f);
        arrclass_294672[4309 & 3071] = new Class_29467(0.2755102f * -1.0208554f, 0.6865854f * 0.5116279f);
        arrclass_294672[11478 & 726] = new Class_29467(0.019704174f * 6.428571f, 0.53125f * 0.81280774f);
        arrclass_294672[-32041 & 479] = new Class_29467(0.8736842f * -0.4276123f, 0.23066433f * 1.0875f);
        arrclass_294672[12504 & 477] = new Class_29467(0.59615386f * 0.49646717f, -0.28761166f * 1.1785715f);
        arrclass_294672[-26407 & 17661] = new Class_29467(-0.4674992f * 0.79452056f, 0.5185185f * 0.48992556f);
        arrclass_294672[10974 & -32294] = new Class_29467(0.033333335f * -12.134012f, -0.05330999f * 3.7f);
        arrclass_294672[17627 & 8415] = new Class_29467(0.052591037f * 3.1111112f, 0.02631579f * -15.929645f);
        arrclass_294672[4829 & 26108] = new Class_29467(0.26785713f * 1.2279626f, -0.19283246f * 1.5925926f);
        arrclass_294672[221 & 2301] = new Class_29467(0.17894737f * -1.3941668f, -1.6585488f * 0.22580644f);
        arrclass_294672[222 & 4575] = new Class_29467(0.7169811f * 0.04579107f, 0.49333334f * 0.9097312f);
        arrclass_294672[-24353 & 19679] = new Class_29467(1.5609756f * -0.10653982f, -0.25282973f * 1.6538461f);
        arrclass_294672[6381 & 2018] = new Class_29467(1.8039216f * -0.059222743f, 1.8648648f * 0.23440553f);
        arrclass_294672[25321 & -30477] = new Class_29467(0.1288052f * 0.5f, 0.51724136f * -0.86104405f);
        arrclass_294672[-32534 & 6886] = new Class_29467(-0.112080775f * 4.0f, 0.032258064f * 1.2031838f);
        arrclass_294672[7651 & -7965] = new Class_29467(0.9811321f * -0.42948115f, -0.12874444f * 1.2266667f);
        arrclass_294672[10470 & -30988] = new Class_29467(1.0263158f * 0.04967205f, 0.07317073f * -6.1104083f);
        arrclass_294672[8695 & 16613] = new Class_29467(0.3541918f * 0.57894737f, 2.4473684f * -0.16367108f);
        arrclass_294672[1254 & 486] = new Class_29467(1.4117647f * 0.29594862f, -0.009978355f * 16.75f);
        arrclass_294672[-32009 & 8679] = new Class_29467(-0.41445327f * 0.86021507f, 1.1621622f * -0.23626661f);
        arrclass_294672[-7704 & 252] = new Class_29467(1.6420794f * 0.27272728f, 1.6052631f * 0.027434617f);
        arrclass_294672[18921 & 8941] = new Class_29467(0.9459459f * -0.35942855f, -0.24057418f * 1.2253522f);
        arrclass_294672[1770 & 2559] = new Class_29467(3.25f * 0.11591145f, 0.30768266f * 0.8f);
        arrclass_294672[21227 & 9707] = new Class_29467(67.0f * -0.004684977f, 0.29032257f * 1.1106446f);
        arrclass_294672[-16147 & 2284] = new Class_29467(-0.07860225f * 1.86f, 1.117647f * -0.38078964f);
        arrclass_294672[3053 & -6931] = new Class_29467(0.2020202f * 1.9652938f, 1.375f * -0.15405129f);
        arrclass_294672[494 & 17647] = new Class_29467(0.8947368f * 0.4983755f, -0.032682233f * 1.8510638f);
        arrclass_294672[8431 & 239] = new Class_29467(0.9139785f * -0.44912317f, -0.28026932f * 0.65789473f);
        arrclass_294672[6384 & 25847] = new Class_29467(1.3191489f * 0.1118224f, 0.3030303f * -1.4029491f);
        arrclass_294672[-14095 & 8445] = new Class_29467(0.08205981f * 1.1282052f, 1.3777778f * 0.31962597f);
        arrclass_294672[242 & 25842] = new Class_29467(-0.040334776f * 3.9411764f, 1.0519481f * -0.40019706f);
        arrclass_294672[7423 & 8691] = new Class_29467(0.033333335f * 7.4473343f, 0.22375606f * 1.6774193f);
        arrclass_294672[-28426 & 252] = new Class_29467(0.08413016f * 5.2105265f, -0.027730323f * 3.6666667f);
        arrclass_294672[17655 & 245] = new Class_29467(0.045845587f * 1.3617021f, 10.5f * 0.04244273f);
        arrclass_294672[1270 & 255] = new Class_29467(1.4232954f * 0.2f, 0.026666667f * -13.069661f);
        arrclass_294672[25335 & 6391] = new Class_29467(1.6470588f * -0.20898025f, 0.09615385f * -3.0146453f);
        arrclass_294672[508 & 4346] = new Class_29467(0.12765957f * 0.9385813f, -0.25370577f * 1.7096775f);
        arrclass_294672[255 & 15097] = new Class_29467(-0.93376434f * 0.26086956f, 0.17198619f * 2.2f);
        arrclass_294672[-30465 & 762] = new Class_29467(1.1818181f * 0.25030848f, -0.32171342f * 1.054054f);
        arrclass_294672[17659 & -25857] = new Class_29467(0.14285715f * -0.81480557f, 0.56f * 0.7762228f);
        arrclass_294672[764 & -19204] = new Class_29467(0.6666667f * 0.19110557f, 3.9473684f * -0.10933565f);
        arrclass_294672[-14083 & 8445] = new Class_29467(0.09323865f * 3.9473684f, 1.1818181f * 0.2190888f);
        arrclass_294672[1791 & 18686] = new Class_29467(2.0f * 0.12257185f, 5.75f * 0.065628745f);
        arrclass_294672[-32513 & 1279] = new Class_29467(-1.150536f * 0.375f, 0.15384041f * 0.83116883f);
        Field_7541 = arrclass_294672;
        Class_15710[] arrclass_157102 = new Class_15710[8448 & 18245];
        arrclass_157102[-23451 & 17026] = new Class_15710(0.58151495f * 0.25f, -0.73485714f * 0.5647059f, -0.11437099f * 0.8367347f);
        arrclass_157102[-28607 & 17411] = new Class_15710(0.93939394f * -0.013230123f, -0.6752464f * 0.2159091f, -0.21277352f * 2.0f);
        arrclass_157102[538 & -24446] = new Class_15710(0.6752183f * 0.4262295f, 0.53333336f * -0.048871562f, -0.49279082f * 0.7f);
        arrclass_157102[-28593 & 11011] = new Class_15710(-0.005728138f * 13.5f, 5.875f * 0.04046118f, 1.4461539f * 0.25874487f);
        arrclass_157102[-32764 & 1302] = new Class_15710(1.6226416f * 0.06823478f, -0.01776151f * 20.0f, 0.3908046f * -0.647602f);
        arrclass_157102[2117 & 141] = new Class_15710(1.1754386f * 0.23439838f, 0.4889854f * 0.54f, -0.9180833f * 0.25974026f);
        arrclass_157102[1030 & 24806] = new Class_15710(0.4706703f * 0.625f, 1.3543823f * 0.112676054f, 0.08183526f * 3.72f);
        arrclass_157102[21271 & 2183] = new Class_15710(0.040816326f * 9.802257f, -0.16824912f * 1.2089552f, 0.8795181f * 0.03688554f);
        arrclass_157102[-28470 & 8456] = new Class_15710(15.4f * -0.011021456f, 1.0f * 0.39708647f, 0.47058824f * -0.26891053f);
        arrclass_157102[19721 & 8393] = new Class_15710(-0.15013126f * 0.9879518f, 0.5625f * -0.68616796f, 0.3962264f * 0.44813094f);
        arrclass_157102[-3318 & 46] = new Class_15710(9.969668f * 0.02631579f, 0.15053764f * -1.5642952f, 0.16605273f * 1.6842105f);
        arrclass_157102[-31589 & 75] = new Class_15710(-0.84656346f * 0.32f, 0.038947456f * 9.0f, 0.9032258f * -0.08748363f);
        arrclass_157102[16396 & 462] = new Class_15710(3.142857f * -0.011189025f, 0.9285714f * 0.41840985f, 0.2461889f * 0.9111111f);
        arrclass_157102[16399 & -28339] = new Class_15710(0.21649484f * -0.5855625f, 0.29896906f * 0.6422216f, 0.31511676f * 1.2272727f);
        arrclass_157102[31 & 13710] = new Class_15710(0.18450138f * 0.16f, 1.074074f * 0.41055697f, 0.039328214f * 2.1538463f);
        arrclass_157102[-14305 & 8463] = new Class_15710(-0.50523376f * 0.5555556f, 0.9431818f * -0.2830809f, 0.10407843f * 2.2f);
        arrclass_157102[8952 & 3345] = new Class_15710(0.06896552f * -2.4818134f, 0.05357143f * 3.9968796f, 1.115942f * 0.31979445f);
        arrclass_157102[1813 & 6201] = new Class_15710(0.9677419f * 0.21836682f, 0.17344026f * 2.25f, 13.142858f * -0.0056708967f);
        arrclass_157102[-32750 & 594] = new Class_15710(-0.058686882f * 1.7454545f, 0.24215676f * 0.8787879f, -0.23214677f * 1.65f);
        arrclass_157102[-23393 & 275] = new Class_15710(0.025974026f * -12.721362f, -0.19044916f * 0.8227848f, 0.16196592f * 1.6190476f);
        arrclass_157102[4183 & 52] = new Class_15710(0.30726534f * 0.6805556f, 0.875f * 0.35808894f, -0.0050238175f * 49.0f);
        arrclass_157102[24607 & 2229] = new Class_15710(0.39511886f * 0.87234044f, 1.7307693f * -0.112333894f, -0.22375564f * 0.9574468f);
        arrclass_157102[2166 & 24854] = new Class_15710(0.11576122f * 1.7142857f, -1.5395007f * 0.20879121f, -0.01901957f * 12.857142f);
        arrclass_157102[23 & -11209] = new Class_15710(0.2542373f * -1.1520767f, 0.2809136f * 0.8055556f, 0.7719298f * 0.3315484f);
        arrclass_157102[9436 & 17211] = new Class_15710(-0.056255054f * 2.875f, 0.44047618f * 0.014336235f, 0.52873564f * -0.7941282f);
        arrclass_157102[25 & 26299] = new Class_15710(0.030612245f * -11.701397f, 0.9285714f * -0.15971112f, -0.22379892f * 1.0208334f);
        arrclass_157102[4187 & 9018] = new Class_15710(-0.10883282f * 1.7017543f, 5.2f * -0.066425376f, 0.9381443f * -0.2356873f);
        arrclass_157102[-15333 & 27] = new Class_15710(0.3046301f * 1.0f, 1.05f * 0.097743854f, 1.4328358f * 0.2197799f);
        arrclass_157102[156 & 3165] = new Class_15710(-0.017615855f * 2.1666667f, 8.222222f * -0.031034995f, 2.6111112f * -0.14119823f);
        arrclass_157102[5181 & 413] = new Class_15710(-0.3724515f * 1.0967742f, 1.0972222f * 0.164593f, 8.666667f * 0.006337833f);
        arrclass_157102[13439 & -31842] = new Class_15710(1.8846154f * -0.014259904f, -10.449018f * 0.02631579f, 0.96f * 0.36999995f);
        arrclass_157102[22559 & 8223] = new Class_15710(0.835443f * -0.045498f, 0.0721129f * 4.5454545f, 0.2613409f * 1.1707317f);
        arrclass_157102[-28576 & 8370] = new Class_15710(0.13141151f * 1.8043479f, 1.4666667f * 0.19775364f, -0.17259917f * 1.4444444f);
        arrclass_157102[59 & 3553] = new Class_15710(0.4f * 1.1119151f, 0.09859155f * 0.40033153f, 4.928571f * 0.011342981f);
        arrclass_157102[1826 & 2086] = new Class_15710(1.84f * 0.010788843f, -0.016702037f * 0.9f, -0.4020147f * 1.117647f);
        arrclass_157102[2615 & 299] = new Class_15710(0.101029836f * 4.230769f, 0.020799424f * 1.6086956f, -0.07260981f * 1.882353f);
        arrclass_157102[25078 & 2092] = new Class_15710(-0.02879151f * 7.2f, 0.018328179f * 15.666667f, -0.48122078f * 0.5769231f);
        arrclass_157102[-31315 & 2165] = new Class_15710(-0.21664235f * 1.75f, 0.016014721f * 8.0f, 5.5f * 0.03741691f);
        arrclass_157102[2087 & 25766] = new Class_15710(-0.49915534f * 0.42045453f, 0.015873017f * -6.34465f, -0.03744147f * 10.285714f);
        arrclass_157102[28207 & 4327] = new Class_15710(3.2f * 0.0049462467f, 0.037901286f * 11.25f, 0.6136364f * 0.2329944f);
        arrclass_157102[1132 & 18986] = new Class_15710(-0.10893054f * 1.7333333f, -1.896598f * 0.16666667f, 0.084745765f * -3.0527732f);
        arrclass_157102[-32213 & 24617] = new Class_15710(0.5f * 0.3225978f, 0.68686867f * -0.2875084f, 0.2631579f * -1.4089963f);
        arrclass_157102[-466 & 298] = new Class_15710(1.2666667f * -0.070851244f, 0.9066667f * 0.25273758f, -0.65520847f * 0.575f);
        arrclass_157102[-30869 & 16571] = new Class_15710(0.15379527f * 0.45783132f, 0.66403687f * 0.625f, -0.1574137f * 1.0104166f);
        arrclass_157102[-30548 & 20861] = new Class_15710(1.0f * -0.108292565f, 1.6f * -0.09912885f, 2.3181818f * 0.17555158f);
        arrclass_157102[829 & 4141] = new Class_15710(0.26754808f * 0.9247312f, -0.4860703f * 0.68085104f, 6.142857f * 0.02901422f);
        arrclass_157102[4142 & 9918] = new Class_15710(-0.46864378f * 0.22807017f, 4.090909f * -0.0660402f, 0.3877551f * -0.88622427f);
        arrclass_157102[4335 & -23233] = new Class_15710(1.3548387f * 0.17688099f, 0.9142857f * 0.07441438f, 2.5217392f * -0.14860971f);
        arrclass_157102[2609 & 52] = new Class_15710(-0.5557747f * 0.55128205f, 1.0f * 0.25974283f, 0.014948943f * 13.571428f);
        arrclass_157102[8243 & 1521] = new Class_15710(0.49477488f * 0.3220339f, -0.11379356f * 2.7368422f, 1.25f * -0.22644496f);
        arrclass_157102[-13774 & 243] = new Class_15710(0.9268293f * 0.29236135f, 0.48158482f * 0.29333332f, 2.6111112f * -0.12651058f);
        arrclass_157102[2619 & 311] = new Class_15710(-0.20932826f * 0.72602737f, 0.52641195f * 0.6883117f, 0.16670813f * 1.3157895f);
        arrclass_157102[-25794 & 9396] = new Class_15710(0.42391303f * 0.40097225f, 2.8416107f * 0.12162162f, 8.0f * 0.029092375f);
        arrclass_157102[55 & 12341] = new Class_15710(-0.07093413f * 2.8f, 0.7222222f * 0.53117675f, 0.8780488f * -0.14352572f);
        arrclass_157102[17599 & -32458] = new Class_15710(-0.73926383f * 0.25531915f, -0.011715171f * 17.5f, 3.0714285f * -0.115037985f);
        arrclass_157102[567 & -28553] = new Class_15710(1.1666666f * 0.22792314f, 0.21740597f * 1.3870968f, 0.51666665f * -0.39119464f);
        arrclass_157102[7228 & 8953] = new Class_15710(-0.06020752f * 1.468085f, 0.23958333f * -1.7901161f, 0.74358976f * -0.13941854f);
        arrclass_157102[569 & 1209] = new Class_15710(-0.060026705f * 0.7f, 0.6515151f * 0.47575146f, 0.5733333f * 0.5642643f);
        arrclass_157102[17658 & -28610] = new Class_15710(1.4f * -0.23073818f, 1.6111112f * 0.12509994f, 0.2413793f * -0.99365556f);
        arrclass_157102[-32709 & 14587] = new Class_15710(14.166667f * 0.018442737f, 0.09999473f * 2.76f, -0.42170614f * 0.5714286f);
        arrclass_157102[16446 & 6269] = new Class_15710(0.03578781f * 10.777778f, 1.0767896f * 0.2037037f, 0.10769516f * 0.6956522f);
        arrclass_157102[61 & 1597] = new Class_15710(0.082220025f * 0.9310345f, 0.41414142f * 0.89866215f, 0.011480758f * 21.0f);
        arrclass_157102[2238 & 1342] = new Class_15710(0.19622904f * 2.2f, 2.2894738f * -0.011259151f, 0.051948052f * 2.3940747f);
        arrclass_157102[4159 & 16703] = new Class_15710(0.75f * -0.3853915f, 1.2763158f * -0.26781616f, 6.2f * -0.0074162656f);
        arrclass_157102[17856 & 4192] = new Class_15710(1.2162162f * -0.18104902f, 0.08571429f * 4.468606f, -0.28494367f * 0.3f);
        arrclass_157102[837 & -4007] = new Class_15710(0.915491f * 0.45454547f, -0.2525857f * 0.66101694f, 0.4385965f * -0.08703335f);
        arrclass_157102[-32189 & 24642] = new Class_15710(0.5732267f * 0.3846154f, 0.91463417f * 0.029019678f, 44.0f * -0.008895272f);
        arrclass_157102[-32313 & 18499] = new Class_15710(-0.23233531f * 0.4477612f, 0.4180384f * 0.9305556f, 0.4375f * -0.4591408f);
        arrclass_157102[29252 & 2389] = new Class_15710(-0.3998009f * 0.35820895f, 0.14038767f * 2.6470587f, -0.16396165f * 1.2777778f);
        arrclass_157102[4181 & -20915] = new Class_15710(1.0206186f * 0.38980094f, 1.2266667f * -0.050597847f, 1.0128205f * 0.19838597f);
        arrclass_157102[326 & 18542] = new Class_15710(0.33802816f * -0.7689521f, 0.3503035f * 0.74698794f, 2.2121212f * -0.116543554f);
        arrclass_157102[8263 & -10809] = new Class_15710(0.23043534f * 1.75f, -0.37955034f * 0.2962963f, 0.9571368f * 0.1724138f);
        arrclass_157102[10712 & 586] = new Class_15710(0.25263157f * -0.3544082f, 0.43421054f * -0.70202f, 1.6326531f * 0.19519979f);
        arrclass_157102[16461 & 3145] = new Class_15710(0.16311388f * 0.7291667f, 0.7826087f * -0.36738947f, 0.21102476f * 1.5405406f);
        arrclass_157102[8266 & -13330] = new Class_15710(0.021114817f * 1.0263158f, 28.0f * -0.0011730824f, -0.83251286f * 0.53846157f);
        arrclass_157102[8799 & 20555] = new Class_15710(0.877551f * -0.38873452f, 1.4909091f * 0.167685f, 4.6666665f * 0.03293718f);
        arrclass_157102[-32643 & 19278] = new Class_15710(1.5769231f * 0.20057823f, 0.20547093f * 1.5f, 0.7692308f * -0.112322964f);
        arrclass_157102[621 & 27725] = new Class_15710(0.085641414f * 2.75f, 1.9047619f * -0.18056506f, -0.018837513f * 9.0f);
        arrclass_157102[15438 & 110] = new Class_15710(-0.04864609f * 0.59090906f, 0.2857143f * -1.3845766f, 0.739726f * 0.28734294f);
        arrclass_157102[4175 & 16863] = new Class_15710(0.45454547f * -0.5415201f, 0.019967906f * 1.0117648f, -0.6514172f * 0.57746476f);
        arrclass_157102[4177 & 25556] = new Class_15710(0.36231884f * 0.11614161f, -0.030619448f * 14.6f, 0.0075780717f * 3.9166667f);
        arrclass_157102[-24367 & 2129] = new Class_15710(1.5208334f * 0.17933975f, 0.20830962f * 1.0985916f, -0.48690394f * 0.5652174f);
        arrclass_157102[8274 & -32165] = new Class_15710(0.92f * -0.14646988f, -0.0077738524f * 3.5f, -0.35461032f * 1.2083334f);
        arrclass_157102[2643 & -16141] = new Class_15710(1.4970349f * 0.25581396f, 0.20326868f * 0.6060606f, -0.07755817f * 2.6f);
        arrclass_157102[-31657 & 15068] = new Class_15710(1.3636364f * -0.26015833f, 0.05689194f * 2.235294f, 2.56f * 0.0960589f);
        arrclass_157102[2293 & 25429] = new Class_15710(0.095305994f * 2.419355f, 0.8491368f * 0.36082473f, 0.85106385f * 0.27670875f);
        arrclass_157102[606 & -32554] = new Class_15710(-1.6481214f * 0.05050505f, -0.2705382f * 0.7105263f, 0.8367347f * 0.47598436f);
        arrclass_157102[-16297 & 4695] = new Class_15710(1.0f * 0.2993663f, 10.428572f * -0.025122501f, 2.1290324f * -0.09879292f);
        arrclass_157102[344 & 21208] = new Class_15710(0.8043478f * -0.26790223f, 0.3090909f * 0.87571245f, 21.333334f * 0.013488333f);
        arrclass_157102[-32679 & 20731] = new Class_15710(0.02636198f * 0.6385542f, 1.3333334f * -0.20104918f, 2.5428572f * -0.14198616f);
        arrclass_157102[13146 & -31654] = new Class_15710(0.36683002f * 0.14285715f, 0.9259259f * 0.46819383f, 1.2916666f * -0.084171705f);
        arrclass_157102[16603 & 3419] = new Class_15710(0.004431923f * 2.121212f, 3.8333333f * -0.1166841f, 0.13414635f * 0.36092f);
        arrclass_157102[8798 & -10788] = new Class_15710(0.84444445f * 0.41041052f, 0.75f * 0.015225527f, -0.004039569f * 71.0f);
        arrclass_157102[221 & 6495] = new Class_15710(0.9491525f * -0.39054504f, -0.24583371f * 1.0377358f, 0.84810126f * 0.0037220705f);
        arrclass_157102[4318 & -29825] = new Class_15710(0.17974885f * 1.525f, 0.30231357f * 0.7078652f, 1.8367347f * -0.15549114f);
        arrclass_157102[17023 & -27297] = new Class_15710(0.055555556f * 1.1544181f, 0.8969072f * 0.1905123f, 2.365128f * 0.17391305f);
        arrclass_157102[98 & 740] = new Class_15710(-0.017644908f * 22.0f, -0.14502473f * 0.2739726f, 3.48f * -0.06440334f);
        arrclass_157102[99 & 225] = new Class_15710(0.083333336f * 0.77033633f, -0.03504603f * 8.0f, 0.6421053f * 0.53898f);
        arrclass_157102[4450 & 16486] = new Class_15710(3.4347825f * -0.05782377f, -0.17521064f * 1.9354838f, 0.092997834f * 2.357143f);
        arrclass_157102[99 & 16995] = new Class_15710(0.7108434f * -0.28586185f, 1.8333334f * -0.21118043f, 3.0869565f * 0.034454662f);
        arrclass_157102[-27531 & 2412] = new Class_15710(0.6020408f * -0.23083757f, -0.21269895f * 1.3050847f, -0.22553727f * 1.4444444f);
        arrclass_157102[615 & -16019] = new Class_15710(5.4666667f * -0.011992027f, 1.9777777f * 0.1730494f, 0.2371134f * -1.2007725f);
        arrclass_157102[102 & 870] = new Class_15710(-1.7934656f * 0.14102565f, 0.21428572f * -1.3553064f, 0.33182672f * 0.70149255f);
        arrclass_157102[247 & -32153] = new Class_15710(0.68422574f * 0.21111111f, 0.11779146f * 0.9076923f, 0.24556969f * 1.68f);
        arrclass_157102[1133 & -5910] = new Class_15710(0.1891892f * -1.925998f, 1.5f * -0.16314f, 2.2558138f * -0.043986533f);
        arrclass_157102[16745 & 633] = new Class_15710(1.9092817f * 0.2244898f, 0.43956044f * -0.30905786f, 1.1132076f * -0.016434552f);
        arrclass_157102[-32662 & 22138] = new Class_15710(1.6086956f * 0.103110194f, 12.25f * -0.0256066f, 0.36956522f * -0.7488526f);
        arrclass_157102[4715 & 3199] = new Class_15710(0.073987015f * 3.0f, 1.6818181f * -0.21751103f, 0.04523767f * 3.08f);
        arrclass_157102[5244 & -24340] = new Class_15710(1.7333333f * 0.024940042f, 0.987013f * -0.38831612f, 0.6851852f * 0.33830813f);
        arrclass_157102[11887 & -32643] = new Class_15710(-0.08674026f * 0.9777778f, -0.14453478f * 3.047619f, -0.019452019f * 1.8378378f);
        arrclass_157102[126 & 878] = new Class_15710(1.0325131f * 0.1764706f, 0.70526314f * -0.5605368f, 1.96f * 0.058211528f);
        arrclass_157102[7279 & -23953] = new Class_15710(1.5172414f * -0.21547814f, 0.36923078f * 0.82239693f, 0.027392639f * 2.131579f);
        arrclass_157102[-32653 & 5492] = new Class_15710(-0.10492677f * 3.8888888f, 1.0967742f * 0.03854812f, -0.27743477f * 0.6666667f);
        arrclass_157102[-12167 & 3825] = new Class_15710(0.5584416f * 0.4791952f, 0.32978722f * -0.0394094f, 0.37188226f * 0.9722222f);
        arrclass_157102[12403 & 17142] = new Class_15710(0.35794562f * 0.8450704f, 8.3f * -0.012168557f, 2.3214285f * -0.13676462f);
        arrclass_157102[-8069 & 371] = new Class_15710(0.10123883f * 1.4307692f, 0.5972222f * 0.7131712f, 0.984127f * -0.010626758f);
        arrclass_157102[1020 & 17525] = new Class_15710(2.5526316f * 0.16447349f, 0.038046904f * 2.1190476f, 0.029402392f * 4.7777777f);
        arrclass_157102[381 & 11381] = new Class_15710(-0.35210207f * 0.8545455f, 1.120482f * -0.29723004f, -0.020192053f * 1.6052631f);
        arrclass_157102[17783 & -26506] = new Class_15710(0.8160878f * 0.44594595f, -0.110438794f * 1.1692308f, 0.3877551f * -0.59584314f);
        arrclass_157102[631 & 16503] = new Class_15710(0.8569097f * 0.3846154f, 0.013552573f * 1.3589743f, -0.20389254f * 1.5f);
        arrclass_157102[376 & -15752] = new Class_15710(0.26876554f * 1.0329671f, -0.20541176f * 1.4482758f, -0.17207505f * 1.1166667f);
        arrclass_157102[-30599 & 379] = new Class_15710(1.125f * 0.36880004f, 0.74242425f * -0.19502755f, 0.75f * -0.12922251f);
        arrclass_157102[20090 & 4475] = new Class_15710(0.2109334f * 0.6875f, 1.032258f * -0.038652442f, 2.125f * 0.19958611f);
        arrclass_157102[8447 & 21371] = new Class_15710(0.097800076f * 0.9508197f, -0.2681814f * 1.117647f, 1.078125f * -0.29914078f);
        arrclass_157102[11260 & -16260] = new Class_15710(0.08235294f * 1.2493871f, -0.1253375f * 2.8823528f, 5.5f * 0.045052677f);
        arrclass_157102[-32387 & 17149] = new Class_15710(2.0f * 0.13415286f, 1.1538461f * -0.06132569f, 4.923077f * -0.07196045f);
        arrclass_157102[-32642 & 6526] = new Class_15710(4.4f * -0.09607516f, 0.2631579f * -0.30146015f, 0.34246576f * -0.38633737f);
        arrclass_157102[-27393 & 2687] = new Class_15710(0.62765956f * -0.28378835f, 0.19359183f * 0.93333334f, -0.31640625f * 1.1746032f);
        arrclass_157102[1154 & 148] = new Class_15710(0.5359345f * 0.8192771f, -0.033860322f * 0.83928573f, -0.41278633f * 0.22857143f);
        arrclass_157102[2209 & 4483] = new Class_15710(2.24f * 0.13270462f, 1.4f * 0.17019998f, 0.72602737f * -0.32987702f);
        arrclass_157102[12710 & 218] = new Class_15710(-0.04671797f * 3.6538463f, 4.0f * 0.055396143f, 0.6984127f * 0.50472695f);
        arrclass_157102[1159 & 20643] = new Class_15710(0.47023776f * 0.8095238f, 1.0425621f * 0.14117648f, 0.20833333f * -0.9098231f);
        arrclass_157102[16516 & 1172] = new Class_15710(2.3333333f * -0.07506196f, 0.6969697f * -0.39440438f, 1.6666666f * 0.18615578f);
        arrclass_157102[8645 & 4231] = new Class_15710(-0.21553913f * 1.0333333f, 0.6363636f * -0.36406526f, 0.23209882f * 1.3571428f);
        arrclass_157102[5766 & 134] = new Class_15710(0.16589922f * 0.8255814f, 1.375f * 0.097552225f, 1.3571428f * -0.2999853f);
        arrclass_157102[4247 & 399] = new Class_15710(-0.3584652f * 0.9846154f, -0.46128976f * 0.53608245f, 7.5f * -0.017268615f);
        arrclass_157102[170 & -14968] = new Class_15710(-0.09370777f * 2.764706f, 0.6909091f * -0.43212306f, -0.11059381f * 1.9444444f);
        arrclass_157102[2703 & 169] = new Class_15710(0.76f * -0.4978973f, 0.037227668f * 5.909091f, -0.060433153f * 1.7291666f);
        arrclass_157102[4239 & -31606] = new Class_15710(0.32467532f * -0.17358282f, 0.1764706f * 0.8419179f, 0.2448733f * 1.7192982f);
        arrclass_157102[939 & -22369] = new Class_15710(0.006134771f * 53.0f, 0.50574714f * 0.19112411f, -0.40658838f * 0.72727275f);
        arrclass_157102[-32610 & 1228] = new Class_15710(0.77272725f * -0.5423642f, 0.38183254f * 0.36842105f, 0.6666667f * -0.12608968f);
        arrclass_157102[157 & 25039] = new Class_15710(0.16666667f * -1.9518905f, 0.39130434f * -0.7871967f, 0.35820895f * -0.11796067f);
        arrclass_157102[13230 & 17615] = new Class_15710(0.44827586f * 0.6375418f, 2.0425532f * -0.028376995f, 0.2580645f * 1.3280679f);
        arrclass_157102[2207 & -7281] = new Class_15710(-0.106967114f * 2.5555556f, 0.3705856f * 0.5326087f, 0.36842105f * -0.80891347f);
        arrclass_157102[4304 & 18352] = new Class_15710(0.0651092f * 3.3636363f, 0.14492753f * 1.6629262f, 0.39726028f * -0.7817831f);
        arrclass_157102[24723 & 153] = new Class_15710(0.90936214f * 0.35f, -0.22415288f * 1.2105263f, 1.9761904f * 0.0840258f);
        arrclass_157102[18582 & 947] = new Class_15710(-0.042448875f * 0.7590361f, 1.8888888f * -0.17635562f, 0.4516129f * -0.66611177f);
        arrclass_157102[8347 & 2195] = new Class_15710(3.368421f * -0.09166847f, 7.0f * 0.028468488f, 0.6533333f * -0.3974993f);
        arrclass_157102[-32074 & 25749] = new Class_15710(-0.123040915f * 0.5272727f, 0.6857143f * -0.6287346f, 1.2272727f * 0.09079264f);
        arrclass_157102[1717 & -24353] = new Class_15710(0.60714287f * 0.64584f, -0.02974222f * 2.1162791f, 0.14705883f * -1.439005f);
        arrclass_157102[16599 & 5054] = new Class_15710(-0.03950175f * 4.0666666f, -0.06836726f * 5.25f, -0.0062508937f * 35.0f);
        arrclass_157102[-10081 & 1751] = new Class_15710(0.27272728f * -0.13815162f, 1.0f * -0.22903514f, 0.43691915f * 0.88235295f);
        arrclass_157102[1178 & 9212] = new Class_15710(1.048387f * 0.13304885f, -0.27516913f * 1.3090909f, 0.048090268f * 4.8f);
        arrclass_157102[17565 & 473] = new Class_15710(2.25f * -0.1931153f, 0.005385967f * 1.0677966f, 0.12676056f * 0.9223092f);
        arrclass_157102[-32098 & 11450] = new Class_15710(-0.112298526f * 0.9302326f, 0.33260822f * 1.2531645f, -0.6829481f * 0.19565217f);
        arrclass_157102[6043 & -30465] = new Class_15710(0.3418364f * 0.7777778f, 0.97979796f * 0.2604561f, 1.975f * 0.13075407f);
        arrclass_157102[5341 & -32578] = new Class_15710(19.283743f * 0.010638298f, 0.15002967f * 1.3166667f, 10.857142f * 0.032090902f);
        arrclass_157102[-8035 & 159] = new Class_15710(-0.017278284f * 15.4f, 0.22972804f * 1.0222223f, 14.8f * 0.018694602f);
        arrclass_157102[927 & 13502] = new Class_15710(2.6571429f * 0.029540773f, 1.3584906f * -0.24294217f, 0.61538464f * -0.48045018f);
        arrclass_157102[2463 & -15201] = new Class_15710(-1.44766f * 0.14925373f, 1.9523809f * 0.027537923f, -0.4147549f * 0.94285715f);
        arrclass_157102[-27142 & 677] = new Class_15710(0.38636363f * -0.48084027f, 0.18074676f * 1.1886792f, 1.1008035f * 0.31707317f);
        arrclass_157102[15013 & 227] = new Class_15710(0.09969687f * 0.25f, 0.2826087f * -1.1429069f, 0.030612245f * -10.202921f);
        arrclass_157102[17571 & 13026] = new Class_15710(1.735849f * -0.06922712f, 3.6729295f * 0.109375f, 0.20655933f * 0.7906977f);
        arrclass_157102[9447 & 163] = new Class_15710(-0.0121319825f * 1.7804878f, -0.06112539f * 1.1264368f, 0.23626396f * 1.88f);
        arrclass_157102[2220 & -32602] = new Class_15710(0.24859422f * 1.0449438f, 21.5f * 0.014401399f, 0.07914575f * 2.5f);
        arrclass_157102[-23827 & 4261] = new Class_15710(-0.053718463f * 3.0f, -0.13900523f * 0.70666665f, 7.6666665f * 0.053283807f);
        arrclass_157102[20983 & -32090] = new Class_15710(-1.3320519f * 0.24615385f, 0.19554777f * 0.74747473f, 5.245841f * 0.05172414f);
        arrclass_157102[17639 & -26449] = new Class_15710(0.31990996f * 0.88235295f, 0.09010611f * 0.41666666f, -0.48394775f * 0.72f);
        arrclass_157102[168 & -24406] = new Class_15710(1.0897436f * 0.029083364f, 9.1f * 0.0381764f, -5.1167235f * 0.055555556f);
        arrclass_157102[-32599 & 2217] = new Class_15710(0.3375f * 0.6526263f, 0.7659575f * -0.4518251f, -0.41890565f * 0.44155845f);
        arrclass_157102[-15190 & 4330] = new Class_15710(0.54545456f * 0.5377893f, 1.246478f * 0.24324325f, 0.06851204f * 2.2857144f);
        arrclass_157102[-5973 & 1451] = new Class_15710(0.078947365f * -4.0469027f, 0.18875018f * 1.3f, -0.23305821f * 0.8604651f);
        arrclass_157102[-22868 & 22974] = new Class_15710(-0.4783221f * 0.7195122f, 0.03773585f * -4.501969f, -0.8009096f * 0.29333332f);
        arrclass_157102[8429 & -13395] = new Class_15710(0.05877491f * 4.6f, 14.0f * -0.02553055f, 3.7777777f * 0.010747218f);
        arrclass_157102[2222 & 16815] = new Class_15710(0.2244898f * 1.023908f, 0.1069759f * 3.5f, 16.333334f * 0.005960748f);
        arrclass_157102[1711 & 6319] = new Class_15710(1.6f * 0.058291275f, -0.07925272f * 4.0f, 0.3880162f * 0.78723407f);
        arrclass_157102[-14157 & 5552] = new Class_15710(0.21505377f * -0.51901686f, -0.41651428f * 0.71666664f, 0.18154743f * 1.75f);
        arrclass_157102[7605 & 17075] = new Class_15710(1.0f * 0.21729073f, -4.0037203f * 0.086419754f, -0.17961505f * 1.05f);
        arrclass_157102[8179 & 182] = new Class_15710(0.47380146f * 0.42028984f, 0.67741936f * 0.5639552f, 4.5f * -0.0288851f);
        arrclass_157102[18611 & 12987] = new Class_15710(-0.054191817f * 1.0f, 1.7096775f * -0.123014145f, 0.06122449f * 6.437303f);
        arrclass_157102[26548 & 244] = new Class_15710(0.011089171f * 8.0f, 0.13165706f * 1.5283018f, 0.19630574f * 2.0f);
        arrclass_157102[8437 & -28225] = new Class_15710(0.0058687855f * 47.5f, 0.32992044f * 1.0625f, 0.5060241f * 0.086370096f);
        arrclass_157102[16566 & 10942] = new Class_15710(-0.16676852f * 1.9318181f, 0.26384634f * 1.1625f, 6.5333333f * 0.010415811f);
        arrclass_157102[-32065 & 3511] = new Class_15710(-2.0103621f * 0.21276596f, 0.03228299f * 4.090909f, 0.80851066f * 0.05667565f);
        arrclass_157102[440 & -16197] = new Class_15710(94.0f * 0.0025545945f, -0.18812688f * 0.85714287f, 0.08426585f * 4.090909f);
        arrclass_157102[443 & 8377] = new Class_15710(1.7017543f * 0.085124396f, -0.21920961f * 1.0892857f, 3.6666667f * 0.09623005f);
        arrclass_157102[699 & 9402] = new Class_15710(4.9444447f * -0.07760357f, 3.9166667f * -0.056333575f, 0.375f * 0.21643294f);
        arrclass_157102[-14661 & 4543] = new Class_15710(-0.09495694f * 4.6153846f, -0.06531418f * 1.390625f, -0.061985068f * 0.7525773f);
        arrclass_157102[-30467 & 188] = new Class_15710(-0.34517428f * 1.0930233f, 0.12361942f * 0.44047618f, 6.5f * 0.036792133f);
        arrclass_157102[-25923 & 16893] = new Class_15710(0.10051189f * 1.2531645f, 1.9777777f * 0.17615457f, 0.4004386f * 0.63793105f);
        arrclass_157102[4287 & 25534] = new Class_15710(0.9411765f * -0.14941783f, -0.08513288f * 3.1818182f, 2.125f * -0.15561397f);
        arrclass_157102[-22337 & 1215] = new Class_15710(-0.08916738f * 1.7727273f, 0.6792152f * 0.61290324f, -0.022579318f * 2.875f);
        arrclass_157102[716 & 192] = new Class_15710(0.8671642f * 0.2857143f, 2.0444446f * -0.1432109f, 0.43243244f * -0.54425025f);
        arrclass_157102[705 & 197] = new Class_15710(0.7176471f * 0.40634635f, 0.33125353f * 1.0f, 0.052165575f * 1.6857142f);
        arrclass_157102[19671 & 12738] = new Class_15710(0.27619743f * 0.26666668f, 1.2826087f * -0.12990397f, 0.6613044f * 0.62222224f);
        arrclass_157102[-22057 & 1219] = new Class_15710(-0.91442835f * 0.2857143f, 1.3333334f * -0.18166782f, 11.75f * 0.023395449f);
        arrclass_157102[4302 & 245] = new Class_15710(0.9411765f * -0.39544785f, 0.16030595f * 1.5769231f, 0.42857143f * 0.020148188f);
        arrclass_157102[213 & -10769] = new Class_15710(-0.1753316f * 2.1052632f, -0.37198114f * 0.6862745f, 0.29213482f * 0.112627186f);
        arrclass_157102[198 & -6937] = new Class_15710(7.5f * 0.030379225f, -0.29573664f * 1.1355932f, 1.1538461f * 0.16850123f);
        arrclass_157102[17127 & 4303] = new Class_15710(1.3333334f * 0.27254862f, -0.3630299f * 0.6363636f, 2.8f * 0.046664212f);
        arrclass_157102[6377 & 222] = new Class_15710(-0.1591909f * 1.9111111f, 0.7567568f * -0.35658118f, 0.15371348f * 1.2535211f);
        arrclass_157102[2249 & -32051] = new Class_15710(-0.07031455f * 4.55f, 1.2459016f * 0.2538985f, -0.013582911f * 0.64912283f);
        arrclass_157102[3274 & 975] = new Class_15710(0.56626505f * 0.50768673f, 0.8513514f * 0.19290219f, 19.5f * -0.015628962f);
        arrclass_157102[-26421 & 8443] = new Class_15710(-0.046858337f * 3.096774f, 1.5295192f * 0.21428572f, -0.0041222265f * 66.0f);
        arrclass_157102[-23843 & 16844] = new Class_15710(0.7761194f * 0.4148963f, 34.0f * 0.0015039532f, 3.0f * 0.10338462f);
        arrclass_157102[14797 & 1261] = new Class_15710(0.57894737f * -0.21546015f, 0.70652175f * -0.06133718f, 1.0666667f * -0.40330142f);
        arrclass_157102[718 & 16847] = new Class_15710(-1.0004501f * 0.28282827f, -0.28953385f * 1.0555556f, -0.05307264f * 3.2105262f);
        arrclass_157102[13519 & 2287] = new Class_15710(2.8709676f * 0.03724822f, 0.4f * 0.8727562f, 0.3783784f * -0.6951852f);
        arrclass_157102[-32272 & 17618] = new Class_15710(0.8974359f * -0.15830225f, 1.4893616f * -0.20514673f, -0.5057592f * 0.5897436f);
        arrclass_157102[8947 & -30247] = new Class_15710(0.09210526f * -2.7202392f, 1.7135105f * 0.18421052f, -0.4055974f * 0.49367088f);
        arrclass_157102[10198 & 242] = new Class_15710(0.21428572f * 1.5240344f, 0.26126596f * 0.7162162f, 2.0f * 0.12332002f);
        arrclass_157102[-28461 & 8671] = new Class_15710(0.036912195f * 2.0714285f, -0.46346202f * 0.6530612f, 3.7f * 0.0875964f);
        arrclass_157102[734 & -7947] = new Class_15710(1.0738845f * 0.32142857f, 2.8181818f * 0.09783332f, 0.6351351f * -0.13485007f);
        arrclass_157102[5341 & -13353] = new Class_15710(0.26215577f * 1.137255f, 0.09259259f * 3.08087f, 0.22679655f * 0.7916667f);
        arrclass_157102[2774 & 9727] = new Class_15710(0.8028169f * 0.35029784f, 42.0f * 0.008254087f, 0.06171645f * 0.92105263f);
        arrclass_157102[-20265 & 2263] = new Class_15710(2.1290324f * 0.20621319f, 0.48421052f * -0.20219366f, 0.939759f * -0.013602801f);
        arrclass_157102[-16168 & 2264] = new Class_15710(0.44981566f * 0.47761193f, 0.18777871f * 0.9852941f, 0.25480545f * 1.3714286f);
        arrclass_157102[219 & -32551] = new Class_15710(1.0563381f * 0.24569985f, 2.064516f * -0.038492434f, 1.755102f * 0.20450024f);
        arrclass_157102[8442 & 18138] = new Class_15710(0.9054054f * 0.35153568f, -0.27430654f * 1.120482f, 1.0357143f * -0.079201594f);
        arrclass_157102[-32545 & 17627] = new Class_15710(-0.2317587f * 1.7647059f, -0.059275247f * 0.78409094f, 0.46762106f * 0.3888889f);
        arrclass_157102[8959 & 1244] = new Class_15710(5.5384617f * -0.051038522f, 0.07037099f * 1.054054f, 0.4520548f * 0.75696254f);
        arrclass_157102[-11555 & 2525] = new Class_15710(0.6221187f * 0.56f, 3.0625f * 0.07361379f, -0.08220284f * 2.1176472f);
        arrclass_157102[20734 & -29985] = new Class_15710(-0.11345636f * 2.84375f, 0.18421052f * -0.7711749f, 0.5568182f * -0.5022854f);
        arrclass_157102[16639 & -32033] = new Class_15710(0.4607165f * 0.94f, -0.4952857f * 0.24f, 0.037037037f * -0.77204f);
        arrclass_157102[16608 & 244] = new Class_15710(-0.26879954f * 0.3243243f, -0.7206476f * 0.5425532f, 1.3f * -0.15769617f);
        arrclass_157102[9443 & 3053] = new Class_15710(-0.18066445f * 1.1898735f, 0.36070186f * 1.0923077f, 0.26190478f * -0.12401066f);
        arrclass_157102[-28446 & 1010] = new Class_15710(-0.6683874f * 0.40206185f, 0.64537257f * 0.5f, 0.20634921f * -0.78376114f);
        arrclass_157102[739 & 1267] = new Class_15710(1.097561f * 0.19184949f, -0.24516463f * 0.8f, 1.52f * -0.22761075f);
        arrclass_157102[25316 & 7396] = new Class_15710(1.1571429f * 0.37694964f, 0.71428573f * -0.15477245f, 0.97979796f * 0.004711796f);
        arrclass_157102[12535 & -32027] = new Class_15710(0.026291082f * 2.0285714f, 2.34375f * -0.13381952f, 1.5238096f * -0.20885439f);
        arrclass_157102[1254 & -15897] = new Class_15710(0.0625f * -0.95779467f, 4.117647f * 0.033053566f, 2.0f * -0.2123632f);
        arrclass_157102[-31513 & 247] = new Class_15710(0.24433257f * 1.5f, 0.18965577f * 1.3448275f, -0.0055909744f * 10.0f);
        arrclass_157102[1772 & 2282] = new Class_15710(0.9302326f * -0.25165915f, -7.752243f * 0.023529412f, 2.0f * 0.16913353f);
        arrclass_157102[-26391 & 9965] = new Class_15710(-0.070588745f * 0.67021275f, -0.4133263f * 1.0215054f, 1.0625f * -0.13958725f);
        arrclass_157102[9466 & -15893] = new Class_15710(-0.46813637f * 0.51086956f, -0.42961606f * 0.6f, -0.17949209f * 1.5645162f);
        arrclass_157102[763 & -20245] = new Class_15710(0.18390805f * -0.67538154f, 0.27872908f * 1.5272727f, -0.06376947f * 1.2f);
        arrclass_157102[-19732 & 511] = new Class_15710(0.6401832f * 0.4084507f, -0.4112878f * 0.8875f, 0.02738951f * 1.0882353f);
        arrclass_157102[17661 & 14573] = new Class_15710(-0.2976867f * 0.9166667f, 0.4057971f * -0.8624086f, 0.28043604f * 0.26595744f);
        arrclass_157102[-16130 & 238] = new Class_15710(0.01923077f * 0.4104308f, -0.014935458f * 11.2f, 0.31220478f * 1.3378378f);
        arrclass_157102[1263 & 20719] = new Class_15710(1.4029851f * -0.012333205f, 0.7581603f * 0.39285713f, -0.61430687f * 0.5483871f);
        arrclass_157102[2804 & 25080] = new Class_15710(0.2233517f * 0.92f, -0.07445712f * 4.368421f, -0.23341466f * 1.0f);
        arrclass_157102[15603 & 753] = new Class_15710(-0.910835f * 0.3548387f, 12.571428f * 0.012443159f, 0.16666667f * -1.6274526f);
        arrclass_157102[4338 & 9715] = new Class_15710(-0.50053984f * 0.53333336f, 0.16198808f * 1.6046512f, -0.20309317f * 1.2424242f);
        arrclass_157102[247 & -16133] = new Class_15710(2.5714285f * -0.02160034f, 2.90625f * 0.10910328f, -0.13162723f * 2.3888888f);
        arrclass_157102[4342 & 18933] = new Class_15710(-0.09685898f * 2.1515152f, -0.43709442f * 0.7113402f, -0.24215126f * 1.0315789f);
        arrclass_157102[-13067 & 12535] = new Class_15710(1.0461539f * 0.06680971f, -2.7142818f * 0.11627907f, 1.4716982f * 0.21271598f);
        arrclass_157102[26103 & 758] = new Class_15710(0.35910618f * 1.0714285f, -0.105761535f * 1.5178572f, 0.048780486f * -3.4724467f);
        arrclass_157102[2295 & -3593] = new Class_15710(1.3421053f * -0.22548272f, 1.1538461f * -0.26013327f, 1.4385965f * -0.10031919f);
        arrclass_157102[16632 & 1275] = new Class_15710(0.2375f * 1.4529413f, 0.8f * 0.10764399f, 0.6145833f * 0.44859052f);
        arrclass_157102[3071 & -23303] = new Class_15710(0.106879935f * 1.6976744f, -1.912308f * 0.14583333f, -0.098026626f * 3.090909f);
        arrclass_157102[-29446 & 4602] = new Class_15710(2.7857144f * -0.013838499f, 1.3142858f * 0.074528016f, 0.42553192f * 1.0281605f);
        arrclass_157102[251 & 15355] = new Class_15710(0.19027457f * 1.8571428f, 0.09044518f * 2.9473684f, 0.90425533f * 0.08963355f);
        arrclass_157102[-22274 & 21757] = new Class_15710(0.9032258f * -0.008796915f, 0.2173913f * 0.6456534f, -0.33679962f * 1.2692307f);
        arrclass_157102[8957 & 509] = new Class_15710(1.3333334f * 0.30473244f, 0.7121212f * -0.20948236f, 0.14285715f * -0.86183953f);
        arrclass_157102[254 & -24322] = new Class_15710(-0.04033547f * 5.0f, 0.0018319525f * 4.8125f, -1.1926708f * 0.3372093f);
        arrclass_157102[1535 & 21247] = new Class_15710(-0.812922f * 0.09259259f, 0.9101124f * -0.46768233f, 1.1219512f * -0.111544766f);
        Field_7550 = arrclass_157102;
        byte[] arrby = new byte[8457 & 7942];
        arrby[5888 & 10246] = -32768 & 12717;
        arrby[14427 & 18181] = 517 & 5441;
        arrby[17538 & 8775] = 14466 & 10;
        arrby[-32765 & 159] = 163 & -24561;
        arrby[37 & -32122] = -24574 & 3112;
        arrby[-28539 & 5] = 2709 & 105;
        arrby[13318 & -16186] = 27655 & 211;
        arrby[311 & -15353] = -24206 & 5259;
        arrby[20238 & 8232] = 5182 & 128;
        arrby[-32759 & 3421] = 4736 & 10496;
        arrby[-32486 & 650] = 29248 & 2184;
        arrby[-28325 & 11] = -4095 & 128;
        arrby[-28084 & 8495] = -28574 & 3472;
        arrby[79 & 18701] = -32694 & 26371;
        arrby[8462 & 17087] = 1539 & -30669;
        arrby[111 & 7711] = -29657 & 16905;
        arrby[80 & 29208] = 20512 & 1;
        arrby[8245 & 4689] = -7807 & 70;
        arrby[2131 & 17430] = 128 & 1059;
        arrby[183 & -15341] = 8484 & -31672;
        arrby[1300 & 4180] = -32688 & 3233;
        arrby[21181 & -30699] = -32668 & 16659;
        arrby[-32714 & 5278] = 1316 & 24641;
        arrby[16511 & -32361] = 8240 & -14848;
        arrby[-24549 & 408] = 75 & -16368;
        arrby[16601 & 1341] = 33 & 6468;
        arrby[8350 & 5402] = 2376 & 17060;
        arrby[-32485 & 12955] = 32 & 18689;
        arrby[-8164 & 3102] = -16351 & 65;
        arrby[17213 & 4127] = 22914 & -32661;
        arrby[8542 & -29026] = 323 & 4123;
        arrby[2079 & 8255] = 18560 & 1537;
        arrby[-15584 & 100] = 22016 & 20;
        arrby[18981 & -32541] = 18 & -32442;
        arrby[4146 & -30110] = -32729 & 9857;
        arrby[6179 & 355] = 3 & -27325;
        arrby[39 & 20076] = 18304 & 2121;
        arrby[375 & -11227] = -22510 & 4097;
        arrby[24614 & 1062] = 10788 & -16240;
        arrby[39 & 5671] = -16319 & 128;
        arrby[4968 & 9256] = -30591 & 8194;
        arrby[1085 & 15275] = 4379 & -21977;
        arrby[1134 & 9002] = 3073 & -7673;
        arrby[28971 & -31045] = 1595 & 2;
        arrby[20652 & -28804] = 1632 & 20485;
        arrby[10285 & -32579] = 2919 & 3;
        arrby[46 & -32706] = -6046 & 4743;
        arrby[20655 & 2607] = -28535 & 2819;
        arrby[17585 & 10288] = 27 & -32636;
        arrby[8379 & 49] = 1152 & 8193;
        arrby[10170 & 16435] = 256 & -28664;
        arrby[2167 & 9907] = 25154 & 4396;
        arrby[8500 & 20735] = 424 & 8197;
        arrby[1077 & 19381] = 8224 & -28479;
        arrby[4406 & 9790] = 23089 & 0;
        arrby[10679 & 631] = 208 & -24571;
        arrby[120 & -9160] = -30076 & 90;
        arrby[825 & -12039] = 3136 & -28160;
        arrby[2363 & 126] = -30205 & 16588;
        arrby[1147 & 9019] = 729 & -31488;
        arrby[24700 & 316] = 15 & 22785;
        arrby[-29379 & 17085] = 12423 & -31133;
        arrby[-8066 & 62] = 18 & -24566;
        arrby[63 & 703] = 11360 & 4250;
        arrby[4675 & -15284] = 16517 & -18432;
        arrby[4945 & -31679] = 644 & 12328;
        arrby[1106 & 12778] = 9366 & -28095;
        arrby[103 & 8515] = 2202 & 9505;
        arrby[-16156 & 9284] = 452 & 12801;
        arrby[20813 & -29595] = -13564 & 1104;
        arrby[70 & 17734] = 14360 & 1379;
        arrby[-19377 & 17351] = 16665 & -31166;
        arrby[-31505 & 4424] = 9218 & 96;
        arrby[8297 & 1357] = 1091 & 18584;
        arrby[16586 & 9055] = 3269 & 312;
        arrby[-32673 & 5739] = 21532 & -32224;
        arrby[12364 & 19020] = 4096 & -31232;
        arrby[2125 & 13405] = 17986 & 4;
        arrby[9567 & 20686] = 16520 & -32254;
        arrby[20559 & 3295] = -30461 & 1080;
        arrby[5241 & 592] = 8708 & -30597;
        arrby[19961 & 597] = 24705 & -31408;
        arrby[11122 & -28590] = 16386 & 4624;
        arrby[371 & 731] = 9217 & -16302;
        arrby[20694 & -29099] = 3937 & -20476;
        arrby[-24995 & 24789] = 0 & 24769;
        arrby[5334 & -32386] = -32767 & 2356;
        arrby[87 & -23425] = -14328 & 8448;
        arrby[8284 & 1145] = 1058 & -32744;
        arrby[5211 & -21511] = 4099 & -30288;
        arrby[122 & 6494] = 16800 & 8198;
        arrby[4315 & -15233] = 516 & -32742;
        arrby[16511 & 5724] = 1036 & 8962;
        arrby[93 & 607] = 2049 & 4578;
        arrby[8958 & 17502] = 17408 & 10512;
        arrby[127 & 2271] = 8192 & -32444;
        arrby[8288 & 5094] = 8513 & 1085;
        arrby[17529 & -26015] = 31746 & 3;
        arrby[-30362 & 16995] = 2130 & -18944;
        arrby[-30605 & 9443] = 19219 & 4163;
        arrby[-15641 & 8548] = 68 & 22024;
        arrby[2405 & 17005] = 21770 & 192;
        arrby[-32521 & 870] = 21762 & 80;
        arrby[3439 & 4327] = 5058 & 9248;
        arrby[3194 & -7703] = 3283 & 5;
        arrby[749 & 29035] = 16387 & 5947;
        arrby[-13718 & 106] = -20344 & 866;
        arrby[-16021 & 107] = -8958 & 8442;
        arrby[-29700 & 8301] = 17152 & 2053;
        arrby[-31635 & 26733] = -30458 & 4176;
        arrby[4334 & -29570] = 7170 & -15992;
        arrby[5231 & -24321] = 8424 & 20;
        arrby[16752 & 1270] = 20740 & -30080;
        arrby[-30605 & 20601] = 512 & 111;
        arrby[16511 & -32526] = 323 & 18948;
        arrby[18547 & 763] = -22176 & 20996;
        arrby[-3850 & 117] = -11770 & 385;
        arrby[-31115 & 12413] = -24448 & 20225;
        arrby[19062 & 1406] = -8187 & 4194;
        arrby[21119 & 247] = 8208 & 3680;
        arrby[1914 & 22780] = 24134 & -24310;
        arrby[-19845 & 2169] = 16803 & -19889;
        arrby[891 & 126] = -30560 & 4611;
        arrby[8443 & 2171] = 179 & 2057;
        arrby[2044 & 24703] = -24486 & 775;
        arrby[8317 & 3325] = 11651 & 555;
        arrby[23294 & 1150] = 2321 & -24533;
        arrby[255 & 25727] = -32735 & 20;
        arrby[8336 & 1161] = 24645 & 5377;
        arrby[227 & 897] = 8245 & 576;
        arrby[-32574 & 9890] = -30702 & 258;
        arrby[27043 & -32573] = 4483 & -4605;
        arrby[700 & 30852] = -24543 & 17503;
        arrby[4341 & -32115] = 18444 & 1872;
        arrby[25238 & -32377] = 24591 & -29885;
        arrby[23687 & 207] = 8194 & 23814;
        arrby[18600 & -28467] = 21570 & 2092;
        arrby[2217 & 1485] = 2 & 580;
        arrby[138 & 4266] = 4098 & 17921;
        arrby[4335 & 139] = 16496 & 3202;
        arrby[19086 & 4252] = 8262 & 1160;
        arrby[16781 & 6829] = 9265 & -14332;
        arrby[398 & 17150] = 288 & -31720;
        arrby[-32513 & 1423] = -30704 & 12288;
        arrby[16528 & 247] = -26704 & 10241;
        arrby[12503 & 17041] = -29424 & 73;
        arrby[914 & 5266] = -14268 & 4626;
        arrby[2195 & -16205] = 17537 & -23706;
        arrby[412 & 4791] = 9226 & -32617;
        arrby[18837 & -24331] = 2080 & 17796;
        arrby[182 & 158] = 2707 & -31481;
        arrby[22679 & 1759] = 25097 & 6293;
        arrby[9146 & -26471] = 2833 & -28436;
        arrby[-29989 & 4505] = 19200 & -28489;
        arrby[2970 & 20638] = -32764 & 8881;
        arrby[21979 & 667] = 336 & 9344;
        arrby[-24420 & 2780] = 674 & 1299;
        arrby[17565 & 13021] = -24315 & 4347;
        arrby[14750 & -31554] = 17155 & -28637;
        arrby[20895 & 159] = -25456 & 16641;
        arrby[8616 & -10016] = 6176 & -7988;
        arrby[1717 & -1631] = 18561 & -27304;
        arrby[694 & 4579] = -18096 & 17025;
        arrby[-32517 & 2723] = 4662 & -31480;
        arrby[8356 & -30548] = -30568 & 25089;
        arrby[-28499 & 19943] = 12833 & -32766;
        arrby[8358 & -15961] = 4611 & 288;
        arrby[-14873 & 10935] = 9993 & -26556;
        arrby[-15959 & 9452] = 12864 & 2;
        arrby[16809 & -18247] = 1 & -15970;
        arrby[-20293 & 16558] = 1041 & -30712;
        arrby[4795 & 2219] = -30548 & 9489;
        arrby[16620 & 2237] = 10352 & -31743;
        arrby[-25921 & 24813] = -12288 & 992;
        arrby[28911 & 174] = 2176 & -19454;
        arrby[687 & 20735] = -32660 & 6401;
        arrby[441 & -32524] = 131 & -30720;
        arrby[433 & 11959] = 2320 & 38;
        arrby[12983 & -31494] = 8448 & -31734;
        arrby[2487 & -32589] = 21762 & 148;
        arrby[2229 & -14666] = 256 & 4106;
        arrby[17917 & 10421] = 19075 & 4200;
        arrby[-30282 & 29887] = 324 & -24064;
        arrby[3575 & 183] = 1538 & 20928;
        arrby[188 & -24328] = 16515 & 9732;
        arrby[185 & -30531] = -13880 & 8720;
        arrby[8890 & 16826] = 18435 & 4260;
        arrby[-30981 & 4543] = 16650 & 4708;
        arrby[1212 & 28861] = 2249 & 12288;
        arrby[-24323 & 18877] = 2578 & 21632;
        arrby[-23873 & 22782] = 778 & -31743;
        arrby[9727 & -28481] = 10531 & -15208;
        arrby[25536 & 1266] = 19 & 16994;
        arrby[17601 & 211] = 4194 & 18576;
        arrby[1474 & -5929] = 9281 & 313;
        arrby[27075 & 1751] = 279 & 3139;
        arrby[17348 & 4292] = 20482 & -22456;
        arrby[2805 & -19257] = -32638 & 545;
        arrby[-30001 & 20726] = 24672 & -31612;
        arrby[20703 & 8423] = 11274 & -27903;
        arrby[8441 & 200] = -24287 & 6144;
        arrby[14811 & 205] = -31488 & 12386;
        arrby[-16162 & 4810] = 1106 & 4;
        arrby[24795 & -31797] = -14320 & 9226;
        arrby[26828 & 477] = 68 & 30209;
        arrby[8655 & 17645] = 5124 & 17026;
        arrby[6606 & -15650] = 22546 & 256;
        arrby[479 & -15665] = 768 & -27628;
        arrby[1232 & -31746] = 18435 & 1803;
        arrby[4307 & 2777] = -32723 & 320;
        arrby[2262 & 26322] = 8195 & 5281;
        arrby[-29989 & 247] = 190 & 16450;
        arrby[24820 & -31020] = 8491 & 1171;
        arrby[23285 & 8663] = -32112 & 26944;
        arrby[214 & 215] = -22526 & 4202;
        arrby[4823 & 471] = 41 & 9475;
        arrby[17628 & 760] = -6119 & 4512;
        arrby[9437 & -13861] = -26094 & 8256;
        arrby[2522 & -32549] = -24539 & 18952;
        arrby[17627 & 6623] = 8258 & 17;
        arrby[2300 & 17116] = 4499 & -13245;
        arrby[221 & 25565] = 8709 & -13021;
        arrby[766 & -16162] = -32374 & 2563;
        arrby[16607 & 4319] = 1040 & 24640;
        arrby[16609 & -32536] = 6 & 35;
        arrby[10721 & 4329] = -26547 & 8241;
        arrby[-30486 & 758] = 16514 & 781;
        arrby[-16141 & 9451] = 12303 & 2147;
        arrby[8421 & 1252] = 8234 & 16384;
        arrby[26853 & 1253] = -26616 & 16599;
        arrby[254 & 6118] = 565 & 9410;
        arrby[20711 & 231] = 1540 & 6208;
        arrby[232 & 5610] = 16388 & -31390;
        arrby[2281 & 4335] = 260 & 74;
        arrby[24814 & -28438] = -24559 & 20640;
        arrby[239 & -28181] = 1128 & 28674;
        arrby[8700 & 17135] = 3084 & 8640;
        arrby[9453 & -16147] = 2628 & 17409;
        arrby[21246 & 2287] = 12505 & 17664;
        arrby[1263 & 12527] = 22 & 16393;
        arrby[244 & 19696] = -13821 & 8211;
        arrby[25337 & 497] = -32127 & 1129;
        arrby[13046 & 16634] = 2050 & 41;
        arrby[251 & 7415] = 6418 & 8838;
        arrby[-22796 & 16884] = 2689 & 1064;
        arrby[2293 & 8693] = 2176 & 346;
        arrby[4350 & 26358] = 5122 & -32480;
        arrby[1527 & 2815] = -3456 & 2086;
        arrby[6392 & 9720] = 1051 & 16931;
        arrby[-24327 & 17149] = -32226 & 19810;
        arrby[23803 & -32518] = 11280 & -32504;
        arrby[9467 & -13317] = 1313 & -5539;
        arrby[253 & 2300] = 13827 & -30441;
        arrby[1533 & 26877] = -24510 & 19090;
        arrby[766 & -25090] = 577 & -11861;
        arrby[8447 & 6143] = 1825 & 12;
        Field_7549 = arrby;
    }

    private float Method_7557(float f, float f2) {
        int n = this.Field_7548;
        float f3 = Math.abs(this.Method_7579(n, f, f2)) * 2.0f - 1.0f;
        float f4 = 1.0f;
        int n2 = 9920 & 263;
        while (++n2 < this.Field_7544) {
            f3 += (Math.abs(this.Method_7579(++n, f *= this.Field_7542, f2 *= this.Field_7542)) * 2.0f - 1.0f) * (f4 *= this.Field_7553);
        }
        return f3 * this.Field_7547;
    }

    private float Method_7558(float f, float f2) {
        int n = this.Field_7548;
        float f3 = Math.abs(this.Method_7582(n, f, f2)) * 2.0f - 1.0f;
        float f4 = 1.0f;
        for (int i = 325 & -32639; i < this.Field_7544; ++i) {
            f3 += (Math.abs(this.Method_7582(++n, f *= this.Field_7542, f2 *= this.Field_7542)) * 2.0f - 1.0f) * (f4 *= this.Field_7553);
        }
        return f3 * this.Field_7547;
    }

    private static float Method_7559(int n, int n2, int n3, float f, float f2) {
        int n4 = n;
        n4 ^= (7891 & 18035) * n2;
        n4 ^= (31609 & 32361) * n3;
        n4 = n4 * n4 * n4 * (604564831 & -2012025651);
        n4 = n4 >> (143 & -26355) ^ n4;
        Class_29467 class_29467 = Field_7545[n4 & (2183 & 1135)];
        return f * class_29467.Field_29468 + f2 * class_29467.Field_29469;
    }

    public Class_7536() {
        this(10045 & 1401);
    }

    private float Method_7560(float f, float f2) {
        int n = this.Field_7548;
        float f3 = 1.0f - Math.abs(this.Method_7579(n, f, f2));
        float f4 = 1.0f;
        int n2 = 16394 & 14228;
        while (++n2 < this.Field_7544) {
            f3 -= (1.0f - Math.abs(this.Method_7579(++n, f *= this.Field_7542, f2 *= this.Field_7542))) * (f4 *= this.Field_7553);
        }
        return f3;
    }

    private static int Method_7561(int n, int n2, int n3) {
        int n4 = n;
        n4 ^= (1619 & -29093) * n2;
        n4 ^= (32505 & 31339) * n3;
        n4 = n4 * n4 * n4 * (-2129596851 & 35974477);
        n4 = n4 >> (16397 & -31107) ^ n4;
        return n4;
    }

    private float Method_7562(float f, float f2) {
        int n = this.Field_7548;
        float f3 = 1.0f - Math.abs(this.Method_7582(n, f, f2));
        float f4 = 1.0f;
        for (int i = 16385 & -26365; i < this.Field_7544; ++i) {
            f3 -= (1.0f - Math.abs(this.Method_7582(++n, f *= this.Field_7542, f2 *= this.Field_7542))) * (f4 *= this.Field_7553);
        }
        return f3;
    }

    private static float Method_7563(float f, float f2, float f3, float f4, float f5) {
        float f6 = f4 - f3 - (f - f2);
        return f5 * f5 * f5 * f6 + f5 * f5 * (f - f2 - f6) + f5 * (f3 - f) + f2;
    }

    private float Method_7564(int n, float f, float f2) {
        float f3;
        float f4;
        int n2;
        int n3;
        float f5;
        float f6 = (f + f2) * (0.56164384f * 0.8902439f);
        int n4 = Class_7536.Method_7565(f + f6);
        int n5 = Class_7536.Method_7565(f2 + f6);
        f6 = (float)(n4 + n5) * (6.5454545f * 0.038194444f);
        float f7 = (float)n4 - f6;
        float f8 = f - f7;
        float f9 = (float)n5 - f6;
        float f10 = f2 - f9;
        if (f8 > f10) {
            n2 = 1 & -25469;
            n3 = 1552 & 16808;
        } else {
            n2 = 2562 & 1024;
            n3 = 4363 & -13311;
        }
        float f11 = f8 - (float)n2 + 4.571429f * 0.054687496f;
        float f12 = f10 - (float)n3 + 0.3319672f * 0.75308645f;
        float f13 = f8 - 1.0f + 1.7674419f * 0.28289473f;
        float f14 = f10 - 1.0f + 0.7631579f * 0.6551724f;
        f6 = 0.4848485f * 1.03125f - f8 * f8 - f10 * f10;
        if (f6 < 0.0f) {
            f3 = 0.0f;
        } else {
            f6 *= f6;
            f3 = f6 * f6 * Class_7536.Method_7559(n, n4, n5, f8, f10);
        }
        f6 = 0.14035088f * 3.5625f - f11 * f11 - f12 * f12;
        if (f6 < 0.0f) {
            f4 = 0.0f;
        } else {
            f6 *= f6;
            f4 = f6 * f6 * Class_7536.Method_7559(n, n4 + n2, n5 + n3, f11, f12);
        }
        f6 = 2.0930233f * 0.23888889f - f13 * f13 - f14 * f14;
        if (f6 < 0.0f) {
            f5 = 0.0f;
        } else {
            f6 *= f6;
            f5 = f6 * f6 * Class_7536.Method_7559(n, n4 + (5 & 21513), n5 + (9369 & -30367), f13, f14);
        }
        return 51.49254f * 0.9710145f * (f3 + f4 + f5);
    }

    private static int Method_7565(float f) {
        return f >= 0.0f ? (int)f : (int)f - (-30719 & 20515);
    }

    private float Method_7566(float f, float f2) {
        int n = this.Field_7548;
        float f3 = this.Method_7564(n, f, f2);
        float f4 = 1.0f;
        for (int i = -21991 & 20609; i < this.Field_7544; ++i) {
            f3 += this.Method_7564(++n, f *= this.Field_7542, f2 *= this.Field_7542) * (f4 *= this.Field_7553);
        }
        return f3 * this.Field_7547;
    }

    private float Method_7567(float f, float f2) {
        int n = this.Field_7548;
        float f3 = 1.0f - Math.abs(this.Method_7564(n, f, f2));
        float f4 = 1.0f;
        for (int i = 105 & 16643; i < this.Field_7544; ++i) {
            f3 -= (1.0f - Math.abs(this.Method_7564(++n, f *= this.Field_7542, f2 *= this.Field_7542))) * (f4 *= this.Field_7553);
        }
        return f3;
    }

    private static float Method_7568(int n, int n2, int n3) {
        int n4 = n;
        n4 ^= (18035 & 9811) * n2;
        return (float)((n4 ^= (31353 & 32617) * n3) * n4 * n4 * (2015423823 & 105049165)) / (0.5945946f * 3.61167693E9f);
    }

    private static float Method_7569(float f) {
        return f * f * (0.48529413f * 6.181818f - 2.0f * f);
    }

    private int Method_7570(float f) {
        int n = Float.floatToRawIntBits(f);
        return n ^ n >> (10998 & 17688);
    }

    private void Method_7571() {
        MethodHandle methodHandle = MethodHandles.constant(String.class, "MC|BlazingPack");
    }

    private static float Method_7572(float f) {
        return f * f * f * (f * (f * (0.91463417f * 6.56f) - 23.88889f * 0.627907f) + 0.6f * 16.666666f);
    }

    public float Method_7573(float f, float f2) {
        int n = this.Method_7570(f);
        int n2 = this.Method_7570(f2);
        return Class_7536.Method_7568(this.Field_7548, n, n2);
    }

    private float Method_7574(float f, float f2) {
        int n = this.Field_7548;
        float f3 = Math.abs(this.Method_7564(n, f, f2)) * 2.0f - 1.0f;
        float f4 = 1.0f;
        for (int i = -28583 & 10117; i < this.Field_7544; ++i) {
            f3 += (Math.abs(this.Method_7564(++n, f *= this.Field_7542, f2 *= this.Field_7542)) * 2.0f - 1.0f) * (f4 *= this.Field_7553);
        }
        return f3 * this.Field_7547;
    }

    private void Method_7575() {
        float f = this.Field_7553;
        float f2 = 1.0f;
        for (int i = -28651 & 24641; i < this.Field_7544; ++i) {
            f2 += f;
            f *= this.Field_7553;
        }
        this.Field_7547 = 1.0f / f2;
    }

    public void Method_7576(int n) {
        this.Field_7548 = n;
    }

    private float Method_7577(float f, float f2) {
        int n = Class_7536.Method_7583(f);
        int n2 = Class_7536.Method_7583(f2);
        float f3 = 0.13636364f * 7333326.0f;
        float f4 = 0.6703297f * 1491801.8f;
        switch (Class_41956.Field_41960[this.Field_7554.ordinal()]) {
            default: {
                for (int i = n - (16897 & -23513); i <= n + (97 & -9191); ++i) {
                    for (int j = n2 - (2147 & 517); j <= n2 + (273 & 5635); ++j) {
                        Class_29467 class_29467 = Field_7541[Class_7536.Method_7561(this.Field_7548, i, j) & (255 & 12799)];
                        float f5 = (float)i - f + class_29467.Field_29468;
                        float f6 = (float)j - f2 + class_29467.Field_29469;
                        float f7 = f5 * f5 + f6 * f6;
                        f4 = Math.max(Math.min(f4, f7), f3);
                        f3 = Math.min(f3, f7);
                    }
                }
                break;
            }
            case 2: {
                for (int i = n - (8449 & 15); i <= n + (-27885 & 33); ++i) {
                    for (int j = n2 - (-16123 & 4627); j <= n2 + (2735 & 17425); ++j) {
                        Class_29467 class_29467 = Field_7541[Class_7536.Method_7561(this.Field_7548, i, j) & (17919 & 14591)];
                        float f8 = (float)i - f + class_29467.Field_29468;
                        float f9 = (float)j - f2 + class_29467.Field_29469;
                        float f10 = Math.abs(f8) + Math.abs(f9);
                        f4 = Math.max(Math.min(f4, f10), f3);
                        f3 = Math.min(f3, f10);
                    }
                }
                break;
            }
            case 3: {
                for (int i = n - (6657 & 17739); i <= n + (8241 & 17613); ++i) {
                    for (int j = n2 - (6169 & 33); j <= n2 + (17409 & 8985); ++j) {
                        Class_29467 class_29467 = Field_7541[Class_7536.Method_7561(this.Field_7548, i, j) & (-32513 & 12543)];
                        float f11 = (float)i - f + class_29467.Field_29468;
                        float f12 = (float)j - f2 + class_29467.Field_29469;
                        float f13 = Math.abs(f11) + Math.abs(f12) + (f11 * f11 + f12 * f12);
                        f4 = Math.max(Math.min(f4, f13), f3);
                        f3 = Math.min(f3, f13);
                    }
                }
            }
        }
        switch (Class_41956.Field_41957[this.Field_7537.ordinal()]) {
            case 4: {
                return f4 - 1.0f;
            }
            case 5: {
                return f4 + f3 - 1.0f;
            }
            case 6: {
                return f4 - f3 - 1.0f;
            }
            case 7: {
                return f4 * f3 - 1.0f;
            }
            case 8: {
                return f3 / f4 - 1.0f;
            }
        }
        return 0.0f;
    }

    public float Method_7578(float f, float f2) {
        f *= this.Field_7552;
        f2 *= this.Field_7552;
        switch (Class_41956.Field_41959[this.Field_7539.ordinal()]) {
            case 1: {
                return this.Method_7584(this.Field_7548, f, f2);
            }
            case 2: {
                switch (Class_41956.Field_41958[this.Field_7551.ordinal()]) {
                    case 1: {
                        return this.Method_7556(f, f2);
                    }
                    case 2: {
                        return this.Method_7581(f, f2);
                    }
                    case 3: {
                        return this.Method_7555(f, f2);
                    }
                }
                return 0.0f;
            }
            case 3: {
                return this.Method_7582(this.Field_7548, f, f2);
            }
            case 4: {
                switch (Class_41956.Field_41958[this.Field_7551.ordinal()]) {
                    case 1: {
                        return this.Method_7587(f, f2);
                    }
                    case 2: {
                        return this.Method_7558(f, f2);
                    }
                    case 3: {
                        return this.Method_7562(f, f2);
                    }
                }
                return 0.0f;
            }
            case 5: {
                return this.Method_7564(this.Field_7548, f, f2);
            }
            case 6: {
                switch (Class_41956.Field_41958[this.Field_7551.ordinal()]) {
                    case 1: {
                        return this.Method_7566(f, f2);
                    }
                    case 2: {
                        return this.Method_7574(f, f2);
                    }
                    case 3: {
                        return this.Method_7567(f, f2);
                    }
                }
                return 0.0f;
            }
            case 7: {
                switch (Class_41956.Field_41957[this.Field_7537.ordinal()]) {
                    case 1: 
                    case 2: 
                    case 3: {
                        return this.Method_7585(f, f2);
                    }
                }
                return this.Method_7577(f, f2);
            }
            case 8: {
                return this.Method_7573(f, f2);
            }
            case 9: {
                return this.Method_7579(this.Field_7548, f, f2);
            }
            case 10: {
                switch (Class_41956.Field_41958[this.Field_7551.ordinal()]) {
                    case 1: {
                        return this.Method_7580(f, f2);
                    }
                    case 2: {
                        return this.Method_7557(f, f2);
                    }
                    case 3: {
                        return this.Method_7560(f, f2);
                    }
                }
                return 0.0f;
            }
        }
        return 0.0f;
    }

    private float Method_7579(int n, float f, float f2) {
        int n2 = Class_7536.Method_7565(f);
        int n3 = Class_7536.Method_7565(f2);
        int n4 = n2 - (-32715 & 31049);
        int n5 = n3 - (20617 & 8199);
        int n6 = n2 + (-19355 & 16651);
        int n7 = n3 + (16903 & -22463);
        int n8 = n2 + (16642 & -28134);
        int n9 = n3 + (654 & -14046);
        float f3 = f - (float)n2;
        float f4 = f2 - (float)n3;
        return Class_7536.Method_7563(Class_7536.Method_7563(Class_7536.Method_7568(n, n4, n5), Class_7536.Method_7568(n, n2, n5), Class_7536.Method_7568(n, n6, n5), Class_7536.Method_7568(n, n8, n5), f3), Class_7536.Method_7563(Class_7536.Method_7568(n, n4, n3), Class_7536.Method_7568(n, n2, n3), Class_7536.Method_7568(n, n6, n3), Class_7536.Method_7568(n, n8, n3), f3), Class_7536.Method_7563(Class_7536.Method_7568(n, n4, n7), Class_7536.Method_7568(n, n2, n7), Class_7536.Method_7568(n, n6, n7), Class_7536.Method_7568(n, n8, n7), f3), Class_7536.Method_7563(Class_7536.Method_7568(n, n4, n9), Class_7536.Method_7568(n, n2, n9), Class_7536.Method_7568(n, n6, n9), Class_7536.Method_7568(n, n8, n9), f3), f4) * (0.77492875f * 0.5735294f);
    }

    private float Method_7580(float f, float f2) {
        int n = this.Field_7548;
        float f3 = this.Method_7579(n, f, f2);
        float f4 = 1.0f;
        int n2 = 512 & 21514;
        while (++n2 < this.Field_7544) {
            f3 += this.Method_7579(++n, f *= this.Field_7542, f2 *= this.Field_7542) * (f4 *= this.Field_7553);
        }
        return f3 * this.Field_7547;
    }

    private float Method_7581(float f, float f2) {
        int n = this.Field_7548;
        float f3 = Math.abs(this.Method_7584(n, f, f2)) * 2.0f - 1.0f;
        float f4 = 1.0f;
        for (int i = 1555 & 2337; i < this.Field_7544; ++i) {
            f3 += (Math.abs(this.Method_7584(++n, f *= this.Field_7542, f2 *= this.Field_7542)) * 2.0f - 1.0f) * (f4 *= this.Field_7553);
        }
        return f3 * this.Field_7547;
    }

    private float Method_7582(int n, float f, float f2) {
        float f3;
        float f4;
        int n2 = Class_7536.Method_7565(f);
        int n3 = Class_7536.Method_7565(f2);
        int n4 = n2 + (17961 & 8451);
        int n5 = n3 + (8205 & -9663);
        switch (Class_41956.Field_41961[this.Field_7546.ordinal()]) {
            default: {
                f4 = f - (float)n2;
                f3 = f2 - (float)n3;
                break;
            }
            case 2: {
                f4 = Class_7536.Method_7569(f - (float)n2);
                f3 = Class_7536.Method_7569(f2 - (float)n3);
                break;
            }
            case 3: {
                f4 = Class_7536.Method_7572(f - (float)n2);
                f3 = Class_7536.Method_7572(f2 - (float)n3);
            }
        }
        float f5 = f - (float)n2;
        float f6 = f2 - (float)n3;
        float f7 = f5 - 1.0f;
        float f8 = f6 - 1.0f;
        float f9 = Class_7536.Method_7586(Class_7536.Method_7559(n, n2, n3, f5, f6), Class_7536.Method_7559(n, n4, n3, f7, f6), f4);
        float f10 = Class_7536.Method_7586(Class_7536.Method_7559(n, n2, n5, f5, f8), Class_7536.Method_7559(n, n4, n5, f7, f8), f4);
        return Class_7536.Method_7586(f9, f10, f3);
    }

    private static int Method_7583(float f) {
        return f >= 0.0f ? (int)(f + 4.75f * 0.10526316f) : (int)(f - 1.5208334f * 0.32876712f);
    }

    private float Method_7584(int n, float f, float f2) {
        float f3;
        float f4;
        int n2 = Class_7536.Method_7565(f);
        int n3 = Class_7536.Method_7565(f2);
        int n4 = n2 + (1 & -23421);
        int n5 = n3 + (-31735 & 16659);
        switch (Class_41956.Field_41961[this.Field_7546.ordinal()]) {
            default: {
                f4 = f - (float)n2;
                f3 = f2 - (float)n3;
                break;
            }
            case 2: {
                f4 = Class_7536.Method_7569(f - (float)n2);
                f3 = Class_7536.Method_7569(f2 - (float)n3);
                break;
            }
            case 3: {
                f4 = Class_7536.Method_7572(f - (float)n2);
                f3 = Class_7536.Method_7572(f2 - (float)n3);
            }
        }
        float f5 = Class_7536.Method_7586(Class_7536.Method_7568(n, n2, n3), Class_7536.Method_7568(n, n4, n3), f4);
        float f6 = Class_7536.Method_7586(Class_7536.Method_7568(n, n2, n5), Class_7536.Method_7568(n, n4, n5), f4);
        return Class_7536.Method_7586(f5, f6, f3);
    }

    private float Method_7585(float f, float f2) {
        int n = Class_7536.Method_7583(f);
        int n2 = Class_7536.Method_7583(f2);
        float f3 = 0.11827957f * 8454537.0f;
        int n3 = 2590 & 4417;
        int n4 = 2080 & 21962;
        switch (Class_41956.Field_41960[this.Field_7554.ordinal()]) {
            default: {
                int n5;
                for (n5 = n - (9601 & 20993); n5 <= n + (19745 & 7); ++n5) {
                    for (int i = n2 - (-23529 & 2089); i <= n2 + (16705 & -32709); ++i) {
                        Class_29467 class_29467 = Field_7541[Class_7536.Method_7561(this.Field_7548, n5, i) & (17663 & 511)];
                        float f4 = (float)n5 - f + class_29467.Field_29468;
                        float f5 = (float)i - f2 + class_29467.Field_29469;
                        float f6 = f4 * f4 + f5 * f5;
                        if (!(f6 < f3)) continue;
                        f3 = f6;
                        n3 = n5;
                        n4 = i;
                    }
                }
                break;
            }
            case 2: {
                int n5;
                for (n5 = n - (-14331 & 8665); n5 <= n + (1803 & 12449); ++n5) {
                    for (int i = n2 - (-16319 & 3841); i <= n2 + (18965 & 1313); ++i) {
                        Class_29467 class_29467 = Field_7541[Class_7536.Method_7561(this.Field_7548, n5, i) & (-32513 & 11519)];
                        float f7 = (float)n5 - f + class_29467.Field_29468;
                        float f8 = (float)i - f2 + class_29467.Field_29469;
                        float f9 = Math.abs(f7) + Math.abs(f8);
                        if (!(f9 < f3)) continue;
                        f3 = f9;
                        n3 = n5;
                        n4 = i;
                    }
                }
                break;
            }
            case 3: {
                int n5;
                for (n5 = n - (513 & -32571); n5 <= n + (9217 & -28587); ++n5) {
                    for (int i = n2 - (1089 & -28287); i <= n2 + (257 & -31599); ++i) {
                        Class_29467 class_29467 = Field_7541[Class_7536.Method_7561(this.Field_7548, n5, i) & (-31489 & 21247)];
                        float f10 = (float)n5 - f + class_29467.Field_29468;
                        float f11 = (float)i - f2 + class_29467.Field_29469;
                        float f12 = Math.abs(f10) + Math.abs(f11) + (f10 * f10 + f11 * f11);
                        if (!(f12 < f3)) continue;
                        f3 = f12;
                        n3 = n5;
                        n4 = i;
                    }
                }
            }
        }
        switch (Class_41956.Field_41957[this.Field_7537.ordinal()]) {
            case 1: {
                return Class_7536.Method_7568(20672 & 27, n3, n4);
            }
            case 2: {
                Class_29467 class_29467 = Field_7541[Class_7536.Method_7561(this.Field_7548, n3, n4) & (255 & -12801)];
                return this.Field_7538.Method_7578((float)n3 + class_29467.Field_29468, (float)n4 + class_29467.Field_29469);
            }
            case 3: {
                return f3 - 1.0f;
            }
        }
        return 0.0f;
    }

    private static float Method_7586(float f, float f2, float f3) {
        return f + f3 * (f2 - f);
    }

    public Class_7536(int n) {
        this.Field_7548 = n;
        this.Method_7575();
    }

    private float Method_7587(float f, float f2) {
        int n = this.Field_7548;
        float f3 = this.Method_7582(n, f, f2);
        float f4 = 1.0f;
        for (int i = 8705 & 2049; i < this.Field_7544; ++i) {
            f3 += this.Method_7582(++n, f *= this.Field_7542, f2 *= this.Field_7542) * (f4 *= this.Field_7553);
        }
        return f3 * this.Field_7547;
    }
}

