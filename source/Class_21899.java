/*
 * Decompiled with CFR 0.145.
 */
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.nio.FloatBuffer;
import java.util.Arrays;

public class Class_21899 {
    static void Method_21900(float[] arrf, float[] arrf2) {
        arrf[5155 & 592] = arrf2[-29675 & 8493] * arrf2[-32741 & 8458] * arrf2[-31217 & 6223] - arrf2[8213 & 263] * arrf2[139 & 5163] * arrf2[-20386 & 1422] - arrf2[4617 & 18537] * arrf2[9390 & 71] * arrf2[16431 & 14431] + arrf2[-28403 & 41] * arrf2[79 & 12423] * arrf2[10014 & -28562] + arrf2[9421 & 16397] * arrf2[-31418 & 4135] * arrf2[139 & -1717] - arrf2[-15907 & 5165] * arrf2[4255 & -22521] * arrf2[16394 & 13103];
        arrf[18569 & -27385] = -arrf2[-30447 & 649] * arrf2[2059 & 426] * arrf2[16415 & 2383] + arrf2[-28669 & 26165] * arrf2[16779 & 6219] * arrf2[7950 & 30] + arrf2[6425 & -15123] * arrf2[25098 & 150] * arrf2[-11505 & 8207] - arrf2[585 & -27607] * arrf2[-31229 & 4179] * arrf2[5134 & 14] - arrf2[22303 & 2093] * arrf2[-4862 & 10] * arrf2[-30645 & 8587] + arrf2[8221 & 1229] * arrf2[-18925 & 67] * arrf2[-32630 & 16490];
        arrf[1794 & 178] = arrf2[4737 & 271] * arrf2[12038 & 16407] * arrf2[7967 & -32753] - arrf2[1345 & -20437] * arrf2[-30601 & 4231] * arrf2[25375 & 1134] - arrf2[8197 & -27883] * arrf2[4450 & 18442] * arrf2[24863 & 2671] + arrf2[14789 & -32731] * arrf2[6699 & 323] * arrf2[-25570 & 174] + arrf2[6671 & 17741] * arrf2[146 & -32242] * arrf2[343 & 4743] - arrf2[10525 & -31635] * arrf2[67 & 13603] * arrf2[167 & 18966];
        arrf[9243 & -28537] = -arrf2[12309 & 555] * arrf2[-15434 & 7238] * arrf2[-27621 & 2347] + arrf2[-32621 & 8705] * arrf2[-30777 & 4119] * arrf2[74 & 8842] + arrf2[18629 & -31739] * arrf2[25906 & 4107] * arrf2[10203 & 22543] - arrf2[5125 & 413] * arrf2[-15353 & 8771] * arrf2[526 & 8266] - arrf2[14347 & 16649] * arrf2[259 & -18430] * arrf2[-11993 & 11271] + arrf2[143 & 4217] * arrf2[2311 & 12947] * arrf2[19783 & 8326];
        arrf[516 & 14372] = -arrf2[300 & 133] * arrf2[5162 & -30581] * arrf2[543 & 271] + arrf2[-32499 & 8404] * arrf2[10363 & 4747] * arrf2[8622 & -12769] + arrf2[8719 & -30360] * arrf2[-10714 & 2055] * arrf2[-32705 & 10255] - arrf2[8 & 5913] * arrf2[519 & 13327] * arrf2[-29234 & 4127] - arrf2[1276 & 18700] * arrf2[28678 & 22] * arrf2[28715 & 2779] + arrf2[-5107 & 188] * arrf2[4231 & -23801] * arrf2[12810 & 14];
        arrf[6741 & 8461] = arrf2[-23548 & 32] * arrf2[271 & 26746] * arrf2[29711 & 559] - arrf2[16394 & 565] * arrf2[22927 & 1067] * arrf2[-13682 & 5182] - arrf2[-16360 & 4655] * arrf2[4354 & -16374] * arrf2[2847 & -28561] + arrf2[3162 & 4136] * arrf2[16651 & 9283] * arrf2[3502 & 4639] + arrf2[285 & 13486] * arrf2[-14334 & 5386] * arrf2[11 & -32053] - arrf2[-24306 & 16476] * arrf2[6419 & 8195] * arrf2[3354 & 4810];
        arrf[-26618 & 8366] = -arrf2[8 & 14343] * arrf2[4102 & -16121] * arrf2[15 & -28273] + arrf2[16584 & -29408] * arrf2[3791 & 16647] * arrf2[14 & -10177] + arrf2[4261 & 30] * arrf2[-31726 & 4262] * arrf2[15 & -3505] - arrf2[4364 & 1157] * arrf2[-16285 & 12575] * arrf2[270 & -29682] - arrf2[-8145 & 4108] * arrf2[8331 & 1654] * arrf2[103 & -7161] + arrf2[5134 & 16685] * arrf2[2203 & -23485] * arrf2[854 & 6286];
        arrf[103 & 9495] = arrf2[130 & 5636] * arrf2[6662 & -16378] * arrf2[26767 & 4395] - arrf2[2562 & 8] * arrf2[-15841 & 2375] * arrf2[19342 & -24470] - arrf2[18820 & 4711] * arrf2[339 & 16906] * arrf2[4107 & 16655] + arrf2[25870 & 36] * arrf2[1035 & 2179] * arrf2[18459 & 4878] + arrf2[27529 & -32754] * arrf2[16386 & 14726] * arrf2[9103 & -28665] - arrf2[2568 & -8178] * arrf2[16435 & 3271] * arrf2[4622 & 18567];
        arrf[-28136 & 9352] = arrf2[27396 & -32580] * arrf2[9 & 9789] * arrf2[16591 & 14351] - arrf2[2020 & -28667] * arrf2[-30689 & 16427] * arrf2[1181 & -32179] - arrf2[2089 & 28] * arrf2[-30715 & 9239] * arrf2[-15313 & 6479] + arrf2[3340 & -3959] * arrf2[5639 & 16583] * arrf2[2077 & 4301] + arrf2[-15860 & 2220] * arrf2[11397 & 589] * arrf2[1087 & 139] - arrf2[-19412 & 2076] * arrf2[8239 & 2439] * arrf2[3337 & 8235];
        arrf[13423 & -14183] = -arrf2[5740 & 256] * arrf2[20745 & 10269] * arrf2[26975 & -32721] + arrf2[266 & -24415] * arrf2[4555 & -7669] * arrf2[-32419 & 28685] + arrf2[20586 & 10760] * arrf2[9249 & 16517] * arrf2[-29665 & 24687] - arrf2[24874 & -27112] * arrf2[6631 & 11] * arrf2[18495 & 525] - arrf2[16397 & 12940] * arrf2[-16257 & 7681] * arrf2[-4853 & 27] + arrf2[16780 & -31715] * arrf2[-20437 & 1351] * arrf2[8253 & -15095];
        arrf[16702 & 1162] = arrf2[4320 & 3073] * arrf2[-19835 & 2151] * arrf2[25295 & 15] - arrf2[592 & 16395] * arrf2[239 & 22551] * arrf2[-32755 & 22669] - arrf2[100 & -2020] * arrf2[2273 & -24315] * arrf2[8815 & -27617] + arrf2[1070 & -21628] * arrf2[16927 & 6275] * arrf2[17981 & 4367] + arrf2[2478 & 9741] * arrf2[8353 & 1857] * arrf2[24911 & -32217] - arrf2[-26612 & 25870] * arrf2[-32549 & 3] * arrf2[4285 & -15865];
        arrf[9531 & 75] = -arrf2[18948 & 8322] * arrf2[-12211 & 165] * arrf2[-31733 & 555] + arrf2[16576 & 12297] * arrf2[26375 & 135] * arrf2[5481 & 8329] + arrf2[1030 & 4676] * arrf2[5633 & 145] * arrf2[-30693 & 4171] - arrf2[1540 & 24820] * arrf2[4307 & 559] * arrf2[8335 & -14823] - arrf2[3224 & 21032] * arrf2[2237 & 17985] * arrf2[-28649 & 10351] + arrf2[-32726 & 17480] * arrf2[27187 & 4231] * arrf2[2567 & 1061];
        arrf[-4755 & 4254] = -arrf2[8468 & 21509] * arrf2[-32119 & 24665] * arrf2[542 & -12241] + arrf2[6 & 804] * arrf2[-32501 & 11374] * arrf2[-23155 & 2063] + arrf2[-12280 & 2108] * arrf2[16389 & -31571] * arrf2[10446 & -32466] - arrf2[20600 & -31480] * arrf2[17414 & 12718] * arrf2[10285 & 4767] - arrf2[-27348 & 2060] * arrf2[21509 & 2695] * arrf2[-32673 & 3594] + arrf2[4156 & 8462] * arrf2[29031 & 3094] * arrf2[4361 & -31719];
        arrf[24589 & -28561] = arrf2[16384 & -29568] * arrf2[13145 & 18443] * arrf2[46 & -27618] - arrf2[-23510 & 576] * arrf2[6427 & 202] * arrf2[6989 & 24733] - arrf2[56 & 25609] * arrf2[-32495 & 4267] * arrf2[14542 & -32466] + arrf2[300 & -2854] * arrf2[1166 & 12611] * arrf2[-24563 & 17709] + arrf2[9756 & -32627] * arrf2[8273 & 1797] * arrf2[-11442 & 2218] - arrf2[8316 & 18701] * arrf2[2051 & 4226] * arrf2[1289 & 25097];
        arrf[8222 & 14] = -arrf2[17506 & 10633] * arrf2[-22971 & 389] * arrf2[6447 & 16526] + arrf2[256 & 2113] * arrf2[-29177 & 134] * arrf2[45 & 20493] + arrf2[6549 & 24582] * arrf2[16401 & 8705] * arrf2[8910 & 7182] - arrf2[263 & 16404] * arrf2[-16126 & 2178] * arrf2[16909 & 2447] - arrf2[-32692 & 16558] * arrf2[791 & -23487] * arrf2[8518 & 3078] + arrf2[20700 & 3372] * arrf2[-31709 & 20566] * arrf2[1029 & -31915];
        arrf[351 & 15] = arrf2[-24352 & 17409] * arrf2[17733 & 5] * arrf2[-30321 & 4170] - arrf2[96 & 2313] * arrf2[-29946 & 1126] * arrf2[77 & 25739] - arrf2[25670 & -32091] * arrf2[773 & -15229] * arrf2[2154 & 8334] + arrf2[260 & -32107] * arrf2[66 & 24883] * arrf2[11 & -28535] + arrf2[30 & 32009] * arrf2[8759 & -32439] * arrf2[12295 & 638] - arrf2[17800 & -22518] * arrf2[26562 & 4114] * arrf2[175 & 17157];
        float f = arrf2[16705 & -31588] * arrf[1170 & -32251] + arrf2[9221 & 16385] * arrf[16669 & 7878] + arrf2[-28597 & 2610] * arrf[24697 & 654] + arrf2[-32717 & 2571] * arrf[28684 & 1164];
        if ((double)f != 0.0) {
            int n = 133 & 8498;
            while (n < (146 & 880)) {
                float[] arrf3 = arrf;
                int n2 = n++;
                arrf3[n2] = arrf3[n2] / f;
            }
        } else {
            Arrays.fill(arrf, 0.0f);
        }
    }

    static void Method_21901(FloatBuffer floatBuffer, FloatBuffer floatBuffer2, float[] arrf, float[] arrf2) {
        floatBuffer2.get(arrf2);
        Class_21899.Method_21900(arrf, arrf2);
        floatBuffer.put(arrf);
    }

    static void Method_21902(float[] arrf, float[] arrf2, float[] arrf3) {
        for (int i = 4514 & 64; i < (8453 & 6758); ++i) {
            for (int j = 128 & 2061; j < (3076 & 54); ++j) {
                arrf[(-16380 & 15398) * i + j] = arrf2[(-31668 & 25095) * i + (24834 & -32624)] * arrf3[(-32698 & 776) + j] + arrf2[(982 & 18468) * i + (10497 & 17933)] * arrf3[(14596 & 564) + j] + arrf2[(16676 & -32636) * i + (-15546 & 8211)] * arrf3[(-32760 & 10588) + j] + arrf2[(16613 & 2326) * i + (11475 & -16081)] * arrf3[(5244 & -32499) + j];
            }
        }
    }

    static void Method_21903(float[] arrf, float[] arrf2, float[] arrf3) {
        arrf[5632 & 8198] = arrf2[272 & 1032] * arrf3[6736 & -24415] + arrf2[4 & 9764] * arrf3[19139 & 1] + arrf2[-16358 & 8936] * arrf3[314 & 12806] + arrf2[-30708 & 780] * arrf3[13575 & 16387];
        arrf[-29669 & 8737] = arrf2[-31743 & 4419] * arrf3[2690 & -32712] + arrf2[1215 & -32763] * arrf3[-10197 & 193] + arrf2[-26195 & 16905] * arrf3[17554 & 66] + arrf2[-32609 & 301] * arrf3[22787 & -31741];
        arrf[738 & 8194] = arrf2[8194 & 5130] * arrf3[4099 & 2320] + arrf2[-28537 & 1886] * arrf3[16017 & 16485] + arrf2[8254 & 18571] * arrf3[-27070 & 154] + arrf2[16910 & 2334] * arrf3[5187 & 8711];
        arrf[-24565 & 16567] = arrf2[6227 & -31101] * arrf3[-32764 & 8483] + arrf2[-24553 & 2223] * arrf3[10285 & -11773] + arrf2[-28661 & 20203] * arrf3[1474 & 6659] + arrf2[735 & -11249] * arrf3[791 & -16317];
    }

    private void Method_21904() {
        MethodHandle methodHandle = MethodHandles.constant(String.class, "MC|BlazingPack");
    }
}

