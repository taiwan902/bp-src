/*
 * Decompiled with CFR 0.145.
 */
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;

public final class Class_20072 {
    private static final int[] Field_20073;
    private static final char[] Field_20074;

    private static final void Method_20075(int[] arrn, int[] arrn2, byte[] arrby, int n) {
        int n2;
        int n3;
        int n4;
        int n5 = arrn2[-15740 & 3073];
        int n6 = arrn2[1569 & -20479];
        int n7 = arrn2[25730 & 354];
        int n8 = arrn2[16399 & 3459];
        int n9 = arrn2[8725 & 18692];
        int n10 = arrn2[4421 & 8205];
        int n11 = arrn2[326 & 5638];
        int n12 = arrn2[5127 & 15];
        for (n4 = 2596 & -15231; n4 < (-32078 & 24848); ++n4) {
            arrn[n4] = arrby[n++] << (152 & 538) | (arrby[n++] & (-11009 & 2303)) << (31248 & -32746) | (arrby[n++] & (255 & -3073)) << (8424 & 2334) | arrby[n++] & (511 & 10495);
        }
        for (n4 = 56 & -32495; n4 < (-11968 & 1728); ++n4) {
            n2 = arrn[n4 - (17410 & -28518)];
            n3 = arrn[n4 - (-23537 & 2575)];
            arrn[n4] = ((n2 >>> (23601 & -24551) | n2 << (-24401 & 18959)) ^ (n2 >>> (91 & 22071) | n2 << (8205 & -13171)) ^ n2 >>> (17051 & 4106)) + arrn[n4 - (911 & 20487)] + ((n3 >>> (19727 & 7) | n3 << (-29863 & 1049)) ^ (n3 >>> (2834 & 17466) | n3 << (2062 & 13470)) ^ n3 >>> (16391 & 2051)) + arrn[n4 - (-28143 & 8500)];
        }
        for (n4 = 8256 & 16520; n4 < (25172 & 5186); ++n4) {
            n2 = n12 + ((n9 >>> (25750 & -28090) | n9 << (-17638 & 59)) ^ (n9 >>> (9231 & 2603) | n9 << (149 & 16663)) ^ (n9 >>> (-28517 & 10777) | n9 << (19575 & 519))) + (n9 & n10 ^ (n9 ^ -1 & -1) & n11) + Field_20073[n4] + arrn[n4];
            n3 = ((n5 >>> (24618 & 2579) | n5 << (382 & 24734)) ^ (n5 >>> (9101 & 4205) | n5 << (-30381 & 179)) ^ (n5 >>> (10390 & 1111) | n5 << (1098 & -32582))) + (n5 & n6 ^ n5 & n7 ^ n6 & n7);
            n12 = n11;
            n11 = n10;
            n10 = n9;
            n9 = n8 + n2;
            n8 = n7;
            n7 = n6;
            n6 = n5;
            n5 = n2 + n3;
        }
        int[] arrn3 = arrn2;
        int n13 = 512 & -3840;
        arrn3[n13] = arrn3[n13] + n5;
        int[] arrn4 = arrn2;
        int n14 = 401 & 11329;
        arrn4[n14] = arrn4[n14] + n6;
        int[] arrn5 = arrn2;
        int n15 = 16911 & 2066;
        arrn5[n15] = arrn5[n15] + n7;
        int[] arrn6 = arrn2;
        int n16 = -15485 & 4099;
        arrn6[n16] = arrn6[n16] + n8;
        int[] arrn7 = arrn2;
        int n17 = 20484 & 2190;
        arrn7[n17] = arrn7[n17] + n9;
        int[] arrn8 = arrn2;
        int n18 = 645 & -14235;
        arrn8[n18] = arrn8[n18] + n10;
        int[] arrn9 = arrn2;
        int n19 = -30586 & 24654;
        arrn9[n19] = arrn9[n19] + n11;
        int[] arrn10 = arrn2;
        int n20 = -20433 & 16647;
        arrn10[n20] = arrn10[n20] + n12;
    }

    private static String Method_20076(String string) {
        int n = 29890;
        char[] arrc = string.toCharArray();
        StackTraceElement[] arrstackTraceElement = new Throwable().getStackTrace();
        n = (char)(n ^ (char)arrstackTraceElement[0].getMethodName().hashCode());
        n = (char)(n ^ (char)arrstackTraceElement[1].getMethodName().hashCode());
        n = (char)(n ^ (char)arrstackTraceElement[1].getClassName().hashCode());
        char c = (char)Class_8.Method_10(Class_20072.class, 1);
        n = (char)(n ^ c);
        char c2 = (char)(n >> 7);
        for (int n2 = 0; n2 < arrc.length; n2 = (int)((char)(n2 + 1))) {
            arrc[n2] = (char)(arrc[n2] ^ n ^ n2 & c2);
        }
        return new String(arrc);
    }

    private static String Method_20077(int ... arrn) {
        char[] arrc = new char[arrn.length * (1358 & 26632)];
        int n = 3156 & 0;
        for (int i = -14716 & 2145; i < arrn.length; ++i) {
            arrc[n++] = Field_20074[arrn[i] >> (22687 & -32740) & (-30705 & 25359)];
            arrc[n++] = Field_20074[arrn[i] >> (10335 & 4792) & (8463 & 16463)];
            arrc[n++] = Field_20074[arrn[i] >> (-15841 & 14420) & (-20369 & 2975)];
            arrc[n++] = Field_20074[arrn[i] >> (-28650 & 2065) & (29279 & 399)];
            arrc[n++] = Field_20074[arrn[i] >> (-32756 & 25772) & (17199 & -28529)];
            arrc[n++] = Field_20074[arrn[i] >> (18376 & -30675) & (1103 & 22559)];
            arrc[n++] = Field_20074[arrn[i] >> (2063 & -31452) & (-28881 & 15)];
            arrc[n++] = Field_20074[arrn[i] & (22607 & 8975)];
        }
        return new String(arrc);
    }

    public static String Method_20078(byte[] arrby) {
        int[] arrn = new int[-15736 & 1032];
        arrn[-15098 & 4176] = 2047737455 & 1804330743;
        arrn[12801 & 97] = -1150833019 & -1083723867;
        arrn[1587 & 458] = 1039070066 & -59771022;
        arrn[2183 & 4691] = -445647494 & -1521486534;
        arrn[76 & -16362] = -686894337 & 1369331327;
        arrn[16599 & -20211] = -1148883796 & -1693062770;
        arrn[16390 & -23290] = 529784239 & -1614554709;
        arrn[599 & 10247] = 1542442265 & -537858117;
        int[] arrn2 = arrn;
        int[] arrn3 = new int[4169 & 226];
        int n = arrby.length;
        int n2 = 12336 & 768;
        while (n2 + (16447 & 63) < n) {
            Class_20072.Method_20075(arrn3, arrn2, arrby, n2);
            n2 += 64;
        }
        int n3 = n - n2;
        int n4 = n3 < (-11208 & 10425) ? 9340 & 2362 : 504 & -31622;
        byte[] arrby2 = new byte[n3 < (-26120 & 24635) ? 1090 & -7223 : 14529 & -15696];
        System.arraycopy(arrby, n2, arrby2, 17681 & 10242, n3);
        arrby2[n3] = -128 & -64;
        long l = n << (8195 & 523);
        arrby2[n4++] = (byte)(l >> (9273 & 16568));
        arrby2[n4++] = (byte)(l >> (-31176 & 18483));
        arrby2[n4++] = (byte)(l >> (42 & 3113));
        arrby2[n4++] = (byte)(l >> (8306 & 20648));
        arrby2[n4++] = (byte)(l >> (20600 & 11802));
        arrby2[n4++] = (byte)(l >> (-9648 & 8240));
        arrby2[n4++] = (byte)(l >> (4844 & 267));
        arrby2[n4] = (byte)l;
        Class_20072.Method_20075(arrn3, arrn2, arrby2, -30716 & 560);
        if (n3 >= (-11592 & 2104)) {
            Class_20072.Method_20075(arrn3, arrn2, arrby2, 1144 & 8900);
        }
        String string = Class_20072.Method_20077(arrn2);
        return string;
    }

    private void Method_20079() {
        MethodHandle methodHandle = MethodHandles.constant(String.class, "MC|BlazingPack");
    }

    static {
        int[] arrn = new int[3652 & -16272];
        arrn[1025 & 772] = 1720598520 & 1133146011;
        arrn[12385 & 9] = 1899973787 & -38283343;
        arrn[386 & 20507] = -136773681 & -1111426081;
        arrn[-17781 & 3] = -38412379 & -373949467;
        arrn[2133 & 780] = 995541595 & 2046745183;
        arrn[16901 & 269] = -637955599 & 1508989939;
        arrn[134 & 8742] = -1774221571 & -624958812;
        arrn[135 & 24583] = -1422106881 & -1151508779;
        arrn[-15864 & 14345] = -670586181 & -654856552;
        arrn[16585 & 6189] = 1384864517 & 933452675;
        arrn[9418 & -28614] = 615622590 & 1064406527;
        arrn[4635 & 16651] = 1562213835 & 2009890243;
        arrn[6157 & -23524] = 1929305972 & -205627916;
        arrn[29 & -28531] = -989940738 & -2116095490;
        arrn[18990 & -28193] = -1143201881 & -1610873177;
        arrn[-24049 & 17551] = -1046744202 & -610536963;
        arrn[16912 & -30658] = -457446959 & -153387069;
        arrn[-30703 & 16533] = -268544114 & -272742489;
        arrn[-24558 & 4146] = -1612333098 & 264494567;
        arrn[31507 & -32681] = 646837199 & 1812767196;
        arrn[12372 & 3124] = 770403439 & -1108529281;
        arrn[-32619 & 19807] = 1534366954 & 1249160634;
        arrn[534 & -618] = 2096540637 & 1555688924;
        arrn[2079 & -19433] = 2147076346 & -151156261;
        arrn[606 & -16360] = -1187029673 & -1740746254;
        arrn[-28645 & 2617] = -1103902737 & -386535827;
        arrn[-12006 & 250] = -1199102008 & -228870195;
        arrn[10299 & -28577] = -1075970065 & -10911801;
        arrn[2332 & -23393] = -957346829 & -152760333;
        arrn[8221 & 61] = -570976945 & -710428313;
        arrn[7230 & -15458] = 1187931097 & -1493440687;
        arrn[575 & 26719] = -1662437001 & 892152167;
        arrn[8240 & 162] = 934787727 & -1481176427;
        arrn[1065 & 18481] = 775660984 & -1080346312;
        arrn[29090 & -32654] = 1294761468 & 2108452862;
        arrn[20087 & 35] = 2012745011 & 1396575571;
        arrn[-16346 & 4132] = -182813707 & 1863317332;
        arrn[37 & -20371] = -25539909 & 2012089019;
        arrn[2086 & 16422] = -1044133074 & -2117928658;
        arrn[25207 & 4391] = -1754059347 & -1829573433;
        arrn[3247 & 120] = -1560287071 & -1480594781;
        arrn[25129 & -32449] = -1441077537 & -1392810389;
        arrn[3134 & 298] = -959476752 & -766801040;
        arrn[559 & 3451] = -143821917 & -949168733;
        arrn[-32452 & 8748] = -241768359 & -776210407;
        arrn[175 & 573] = -4651420 & -690272476;
        arrn[-23874 & 111] = -66111611 & -184617547;
        arrn[8431 & -10177] = 342598900 & -1325731720;
        arrn[12469 & 16442] = 434553622 & 1538053462;
        arrn[-32655 & 20537] = 1048013961 & 532675854;
        arrn[4730 & -30542] = 660371292 & 936017868;
        arrn[18495 & 12403] = 1957739957 & 900971701;
        arrn[1268 & 822] = -1187214157 & 958156727;
        arrn[-32651 & 16957] = 1861794507 & 1608034926;
        arrn[20598 & -20929] = 1537198671 & 1604112079;
        arrn[1079 & 29247] = 1761505267 & 1747877875;
        arrn[17465 & -32198] = 1955588846 & -170949906;
        arrn[-31047 & 63] = 2058187631 & 2091380607;
        arrn[6587 & 1594] = -2065106411 & -1782022892;
        arrn[17979 & -32709] = -1899560406 & -589363512;
        arrn[1085 & 8444] = -1866530817 & -1174405126;
        arrn[573 & 19775] = -61543185 & -1529315861;
        arrn[-25537 & 318] = -1090784265 & -1090932745;
        arrn[127 & -12225] = -428638466 & -823035662;
        Field_20073 = arrn;
        Field_20074 = Class_20072.Method_20076("\u689c\u689d\u689c\u689d\u6898\u6899\u6898\u6899\u6894\u6895\u688c\u688d\u688c\u6889\u6888\u6889").toCharArray();
    }
}

